<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.MapPoint.Rendering3D.Utility</name>
    </assembly>
    <members>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.AbstractTileIdQuery">
            <summary>
            Base class for a TileId enumerable.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.AbstractTileIdQuery.IsSmallCount">
            <summary>
            Returns true if this query will return a small number of tiles.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.AbstractTileIdQuery.GetHomeTile">
            <summary>
            Gets a representative or important tile for this query region.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.AbstractTileIdQuery.#ctor(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Constructor.
            </summary>
            <param name="desiredTileLevelOfDetail"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.AbstractTileIdQuery.GetEnumerator">
            <summary>
            IEnumerable generics implementation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.AbstractTileIdQuery.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerable implementation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.AbstractTileIdQuery.DesiredTileLevelOfDetail">
            <summary>
            Gets and sets the desired level of detail of the results of the test.
            </summary>		
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.AbstractTileIdQuery.Count">
            <summary>
            If it is possible to calculate beforehand, will return the total number of tiles in the query,
            including those contained by ranges.  If it is not possible, returns -1.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor">
            <summary>
            Base class for objects that may move around or act in space.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.#ctor(Microsoft.MapPoint.Binding.BindingsSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor"/> class.
            </summary>
            <param name="source">This should be the BindingsSource that owns this actor.</param>        
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.Update(Microsoft.MapPoint.Rendering3D.Scene.SceneState)">
            <summary>
            Derived classes may override this method to update viewpoint or settings.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.OnStopRendering">
            <summary>
            Derived classes may override this method to receive notification of when they are
            no longer being updated nor rendered because they are out of view.
            Update and Render calls may resume at a later time, for example when the camera pans away and then back.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.Render(Microsoft.MapPoint.Rendering3D.Scene.SceneState)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.Intersects(Microsoft.MapPoint.Geometry.VectorMath.Ray3DIntersectionList)">
            <summary>
            Performs ray intersection testing against this actor.  
            By default this method returns no intersection.  Derived actors 
            may override it do perform intersections.
            Derived actors should consider overriding IntersectionTagType also.
            </summary>
            <param name="intersections"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.Intersects(Microsoft.MapPoint.Geometry.VectorMath.SweptSphereD,Microsoft.MapPoint.Geometry.VectorMath.SweptSphereDIntersectionList)">
            <summary>
            Performs swept sphere intersection testing against this actor.
            By default this method returns no intersections.  Derived actors
            may override it to perform intersections.
            </summary>
            <param name="sweptSphere"></param>
            <param name="intersections"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.OnRemove">
            <summary>
            Called when an Actor is removed from the system.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.Dispose">
            <summary>
            Disposes the Actor.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.Dispose(System.Boolean)">
            <summary>
            Disposes of resources owned by the Actor.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.EstimateSizeInBytes">
            <summary>
            Override this to provide the system with the amount of memory, in bytes, an implementation
            of Actor consumes.  This is used for managing the cache when used in a DataSource, and does 
            not need to be exact.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.SizeInBytesEstimateChanged">
            <summary>
            Call this function whenever the current estimate of memory consumption for this Actor has changed,
            for example if a new texture is loaded or disposed.  It will result in an immediate call to 
            <see cref="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.EstimateSizeInBytes"/>.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.CalculateSizeInBytes">
            <summary>
            Gets the size, in bytes, of the object.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.Enabled">
            <summary>
            Gets or sets whether this actor is enabled.  An enabled actor is updated, but not intersected or rendered.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.Source">
            <summary>
            Gets the owner of this actor, that is the object that is used for 
            bindings intersection testing.  Generally this will be the plug-in
            that owns the actor.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.IntersectionTagType">
            <summary>
            Gets the type of the tag that will be added to intersections 
            during intersection testing.  This is used to filter out expensive 
            intersection tests early on.
            By default this method returns null and derived classes must 
            override it to perform early testing.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.IsSolid">
            <summary>
            Gets whether or not this object is solid for the purposes of 
            intersections.  Derived classes may override this to change from
            the default solid setting of "false".
            </summary>
        </member>
        <member name="E:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.SizeInBytesChanged">
            <summary>
            Fired when the value of <see cref="M:Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor.EstimateSizeInBytes"/> has changed.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ActorBuilder">
            <summary>
            A class that allows creation of Actors from Primitives.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ActorBuilder.CreateActors(System.Collections.Generic.IEnumerable{Microsoft.MapPoint.Data.Primitive})">
            <summary>
            Creates an actor and the region it will occupy out of source data.
            </summary>
            <param name="source">Data provided from a DataSource.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ActorBounds">
            <summary>
            An actor to be drawn along with the geographical region it will occupy.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ActorBounds.#ctor(Microsoft.MapPoint.Rendering3D.Steps.Actors.Actor,Microsoft.MapPoint.Geometry.Geometry2.Box2,System.Collections.Generic.IEnumerable{Microsoft.MapPoint.Data.Primitive},System.Int64,System.Double,System.Double)">
            <summary>
            Constructs a pair structure for an actor and its bounding region.
            </summary>
            <param name="actor">The Actor that inhabits this region.</param>
            <param name="boundingRegion">The region that this actor inhabits.  Expects Wgs84 lat/long degrees.</param>
            <param name="source">The source data for this actor.</param>
            <param name="actorSizeInBytes">Memory in bytes that the actor will consume.  Rough estimates are sufficient. 
            Pass in a negative number to force a call to Actor.CalculateDerivedSizeInBytes instead.</param>
            <param name="minimumScale">The minimum scale (maximum zoom) that this actor inhabits.</param>
            <param name="maximumScale">The maximum scale (minimum zoon) that this actors inhabits.</param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ActorBounds.Actor">
            <summary>
            The Actor that inhabits this region.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ActorBounds.BoundingRegion">
            <summary>
            The region that this actor inhabits.  Expects Wgs84 lat/long degrees.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ActorBounds.MinimumScale">
            <summary>
            The minimum scale (maximum zoom) that this actor inhabits.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ActorBounds.MaximumScale">
            <summary>
            The maximum scale (minimum zoom) that this actors inhabits.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ActorBounds.SourcePrimitives">
            <summary>
            The primitives actually used to construct this actor.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ActorBounds.ActorSizeInBytes">
            <summary>
            An estimate of the amount of memory the Actor will consume.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ApiObject">
            <summary>
            The base class of all Host API objects.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.CheckReady">
            <summary>
            If the current State is not Ready, throws an invalid operation exception.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.CheckReadyUI">
            <summary>
            If the current State for UI initialization is not Ready, throws an invalid operation exception.
            There's no real difference between this and CheckReady for end users, but for us it might matter.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.InitializeUI">
            <summary>
            Initialize this object.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.InitializeRender(Microsoft.MapPoint.Utility.Progress)">
            <summary>
            Initialize this object.
            </summary>
            <param name="progress">Allows progress to be tracked.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.TearDownUI">
            <summary>
            Tear down this object.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.TearDownRender">
            <summary>
            Tear down this object.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.InitializeSelfUI">
            <summary>
            Perform any initialization that must occur on the UI thread.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.InitializeSelfRender(Microsoft.MapPoint.Utility.Progress)">
            <summary>
            Perform any initialization that must occur on the Render thread.
            </summary>
            <param name="progress">Allows progress to be tracked.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.TearDownSelfUI">
            <summary>
            Perform any teardown that must occur on the UI thread.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.TearDownSelfRender">
            <summary>
            Perform any teardown that must occur on the Render thread.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ApiObject.State">
            <summary>
            The state of the object.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ReadyState">
            <summary>
            Defines the current state of an object.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.ReadyState.Uninitialized">
            <summary>
            The object has not yet been initialized and is not ready for use.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.ReadyState.Initializing">
            <summary>
            The object is in the process of initialing and is not ready for use.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.ReadyState.Ready">
            <summary>
            The object is initialized and ready to use.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.ReadyState.TearingDown">
            <summary>
            The object is in the process of tearing down and is not ready for use.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.ReadyState.TornDown">
            <summary>
            The object has been torn down and is not ready for use.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.OwnerAttribute">
            <summary>
            An attribute that indicates the field represents ownership of the element, rather than
            a simple reference.  The class that holds the Owner field is responsible for
            initialization and uninitialization of the field.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Binding.BindingsSource">
            <summary>
            Base class for an origin of bindings operations.  This is used for 
            resolution of spatial tests, its assembly is used for naming actions, 
            and it is used for focus testing.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Binding.BindingsSource.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Binding.BindingsSource"/> class.
            </summary>
            <param name="type">The type that will be used to retrieve the 
            assembly whose full name will define actions belonging to this 
            bindings source.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Binding.BindingsSource.Intersects(Microsoft.MapPoint.Geometry.VectorMath.Ray3DIntersectionList)">
            <summary>
            A derived class must implement this to participate in spatial 
            testing of bindings.  If its contributions are closest to the 
            origin of the specified ray, then it "wins" the spatial bindings 
            test.
            </summary>
            <param name="intersections"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Binding.BindingsSource.ToString">
            <summary>
            Returns a string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Binding.BindingsSource.Type">
            <summary>
            Gets the type that is used to retrieve the assembly that is part of an action's full name.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.BoundingBoxTileIdQuery">
            <summary>
            Class that encapsulates the process of getting a list of TileIds that 
            overlap a bounding boundingBox
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.BoundingBoxTileIdQuery.#ctor(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.Geometry.Geometry2.Box2)">
            <summary>
            Constructor.
            </summary>
            <param name="desiredTileLevelOfDetail"></param>
            <param name="boundingBox"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.BoundingBoxTileIdQuery.IsSmallCount">
            <summary>
            Returns true if this query will return a small number of tiles.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.BoundingBoxTileIdQuery.GetHomeTile">
            <summary>
            Gets a representative or important tile for this query region.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.BoundingBoxTileIdQuery.RecursivelyBuildTileIds(System.UInt32,System.UInt32,System.UInt32,System.UInt32,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,System.Collections.Generic.List{Microsoft.MapPoint.Rendering3D.Utility.TileId})">
            <summary>
            Recursive method that takes a box at specified level of detail and 
            returns a list of Tile Ids (either individual or ranges) that fully
            include the box.  This is done by walking down from the current
            level of detail to the position level of detail.
            </summary>
            <param name="westPosition"></param>
            <param name="northPosition"></param>
            <param name="eastPosition"></param>
            <param name="southPosition"></param>
            <param name="currentLevelOfDetail"></param>
            <param name="resultList"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.BoundingBoxTileIdQuery.GetEnumerator">
            <summary>
            IEnumerable implementation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.BoundingBoxTileIdQuery.Count">
            <summary>
            Returns the total number of tiles that will be returned by this enumeration.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ComponentResourceManager">
            <summary>
            Replacement class for System.ComponentModel.ComponentResourceManager that optionally takes a culture to load
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ComponentResourceManager.#ctor(System.Type,System.Globalization.CultureInfo)">
            <summary>
            Constructor
            </summary>
            <param name="culture">Culture override, if any</param>
            <param name="type"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ComponentResourceManager.ApplyResources(System.Object,System.String,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="objectName"></param>
            <param name="culture"></param>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters">
            <summary>
            Helps construct a simple connection string for DataSourceLayerData.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.#ctor(System.String)">
            <summary>
            Creates a new parameters object.
            </summary>
            <param name="tileSource">The base request string for data.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.ToString">
            <summary>
            Convert to a connection parameter string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.CoordinateReferenceSystem">
            <summary>
            The CRS this DataSource is in.  Currently, MercatorCoordinateReferenceSystem.Instance (default) and
            Wgs84CoordinateReferenceSystem.Instance are supported.  If the data is used for imagery, and
            the data is in a geographic projection (common for WMS servers), use Wgs84.  Otherwise leave as Mercator.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.MinZoom">
            <summary>
            The minimum level of detail to display data at for this DataSource.  Default is to display at all
            levels of detail.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.MaxZoom">
            <summary>
            The maximum level of detail to display data at for this DataSource.  Default is to display at all
            levels of detail.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.MinBound">
            <summary>
            The minimum lat/long bound to display data at for this DataSource.  Default is to display everywhere.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.MaxBound">
            <summary>
            The maximum lat/long bound to display data at for this DataSource.  Default is to display everywhere.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.TileSource">
             <summary>
             The base request string for data.  This is ignored if GetTilePath is used with this DataSource.  Replacement
             format variables in the form {X} can be specified to use particular values per tile, for example
             http://www.example.com/tiles/{4}.jpg will emit requests with the appropriate tile request code, or "quadkey", in
             the place of {4}.
             </summary>
             <remarks>URL format parameters:
             0	Reserved
             1	Map Style
             2	Round-robin integer
             3	Reserved
             4	Quadkey
             5	Extention
             6	Generation
             7	Stripe (0-3)
             8	Tile Host
             9	App Host
             10	Language code
             11	Region code
             12	Tile LOD
             13	Tile X
             14	Tile Y
             15	Low order stripe (0-1)
             16	MinLong
             17	MinLat
             18	MaxLong
             19	MaxLat
             20	RequestToken
             21	Culture name
            </remarks>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.CacheRetention">
            <summary>
            How long to keep this data in the disk cache.  Any data cached before this date will be re-requested.  
            Re-requests happen when data is evicted from the memory cache and reloaded, or when the DataSource is
            removed and readded.  If not specified or Zero, data will not be cached at all.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ConnectionParameters.UseLowerDetail">
            <summary>
            If looking at higher detail data than is available for this DataSource, for example if MaxZoom is set,
            this flag determines whether the maximum detail data available should be displayed instead.  The default
            is true.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Cameras.Camera">
            <summary>
            Encapsulates a camera.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Cameras.Camera.DefaultFieldOfViewY">
            <summary>
            The default field of view of a camera across the screen's Y axis, as an angle in radians.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.CommitCameraChange">
            <summary>
            When values within a camera change, the changed flag is set.  When 
            this method is called, the Changed event is fired off if the 
            changed flag is set.  This reduces the number of calls to these 
            events so that they aren't called every time any value changes.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.ViewpointChanging">
            <summary>
            Called when values within the viewpoint change.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.RenderingViewpointChanged">
            <summary>
            Called when values within the rendering viewpoint change.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.DoChange">
            <summary>
            When a change occurs, this "dirties" the camera so that when 
            CommitCameraChange is called, OnChanged will happen.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.OnChanged">
            <summary>
            Called when the camera values change.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.Camera"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.#ctor(Microsoft.MapPoint.Rendering3D.Cameras.Camera)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.Camera"/> class from
            another camera.
            </summary>
            <param name="camera"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.CreateViewpoint">
            <summary>
            Creates a new viewpoint for the camera.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.CreateViewpoint(Microsoft.MapPoint.Geometry.VectorMath.Viewpoint)">
            <summary>
            Creates a new viewpoint for the camera that is a copy of the provided one.
            </summary>
            <param name="viewpoint"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.Copy(Microsoft.MapPoint.Rendering3D.Cameras.Camera)">
            <summary>
            Copies the contents of one camera to this one.
            </summary>
            <param name="camera"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.Camera.Copy(Microsoft.MapPoint.Rendering3D.Cameras.Camera,System.Boolean)">
            <summary>
            Copies the contents of one camera to this one, allowing for the 
            IsRenderable flag to be changed.
            </summary>
            <param name="camera"></param>
            <param name="canRender"></param>
        </member>
        <member name="E:Microsoft.MapPoint.Rendering3D.Cameras.Camera.Changed">
            <summary>
            Event that is raised whenever a value in the camera changes.   
            Use BeginUpdate and EndUpdate to minimize this event.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.UniqueId">
            <summary>
            Unique Id of camera
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.Viewpoint">
            <summary>
            Gets the viewpoint defining the location and orientation of this camera.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.FreeCameraMode">
            <summary>
            When this flag is unset (default) changes to the Viewport will also affect RenderingViewport.
            if this flag is set, the RenderingViewport is not changed when changes are made to the Viewport.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.IsRendering">
            <summary>
            When this flag is set (default), the camera is considered to be one that is used for rendering,
            and changes to it may affect other parts of the system.  If the flag is not set, then the camera
            is simply a holder for values and can be changed without any side effects.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.RenderingViewpoint">
            <summary>
            Gets the actual viewpoint that will be used for rendering.  
            This value should only be referenced by camera controllers that
            support the debug functionality of independantly changing the 
            rendering viewpoint from the camera viewpoint.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.MiscellaneousTransform">
            <summary>
            An extra transform that may be applied to the final transform matrix.  It will not be reflected in the
            independent Projection or View transforms, or in any other independent value of the camera or snapshots
            created from it, so use with care.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.OverrideProjectionMatrix">
            <summary>
            Setting a value for the override projection matrix will cause camera properties like aspect ratio, field of view,
            and near and far clip planes to be ignored in favor of this matrix.  Snapshots created from this camera
            may have incorrect values for these properties unless approximations are explicitly set by the camera controller.
            When this property is used, the final transform matrix will be: ViewMatrix * OverrideProjectionMatrix * 
            MiscellaneousTransform.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.AspectRatio">
            <summary>
            Gets or sets the camera's aspect ratio.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.NearClipPlane">
            <summary>
            Gets or sets the camera's near clip plane.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.FarClipPlane">
            <summary>
            Gets or sets the camera's far clip plane.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.Camera.FieldOfViewY">
            <summary>
            Gets or sets the angle of the field of view in radians.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Cameras.CameraArrivedEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1">
            <summary>
            Abstract base class for all camera controlling classes.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.OnArrived">
            <summary>
            Raises the Arrived event.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.UsesActions">
            <summary>
            Returns true if this controller uses actions
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.Activate">
            <summary>
            Do any one-time work before using this controller
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.Deactivate">
            <summary>
            Do any one-time work after using this controller
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.MoveCamera(Microsoft.MapPoint.Rendering3D.Scene.SceneState)">
            <summary>
            Derived classes must override this to update the camera to its new position and orientation here.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.ScreenRender">
            <summary>
            Derived classes may override this to perform any screen space rendering.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.ViewRender">
            <summary>
            Derived classes may override this to perform any view space rendering.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.KeyDown(System.Object,System.EventArgs)">
            <summary>
            Handle KeyDown events.  Returns true if handled, false otherwise
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.KeyUp(System.Object,System.EventArgs)">
            <summary>
            Handle KeyUp events.  Returns true if handled, false otherwise
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.MouseClick(System.Object,System.EventArgs)">
            <summary>
            Handle MouseClick events.  Returns true if handled, false otherwise
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.MouseDoubleClick(System.Object,System.EventArgs)">
            <summary>
            Handle MouseDoubleClick events.  Returns true if handled, false otherwise
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.MouseDown(System.Object,System.EventArgs)">
            <summary>
            Handle MouseDown events.  Returns true if handled, false otherwise
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.MouseUp(System.Object,System.EventArgs)">
            <summary>
            Handle MouseUp events.  Returns true if handled, false otherwise
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.MouseMove(System.Object,System.EventArgs)">
            <summary>
            Handle MouseMove events.  Returns true if handled, false otherwise
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.MouseWheel(System.Object,System.EventArgs)">
            <summary>
            Handle MouseWheel events.  Returns true if handled, false otherwise
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.Dispose">
            <summary>
            Dispose camera controller resources.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.Dispose(System.Boolean)">
            <summary>
            Dispose camera controller resources.
            </summary>
        </member>
        <member name="E:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.Arrived">
            <summary>
            Event that is raised when the camera arrives at its destination (if it has the concept of a destination).
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.Active">
            <summary>
            Gets wehther or not this camera controller is active (Activate or Deactive has been called).
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.Camera">
            <summary>
            Gets the camera for this controller.  For this property to be valid, the controller must be enabled by the CameraControllerManager.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.Enabled">
            <summary>
            Returns true if this controller has been enabled by the CameraControllerManager and it ready for use.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.HasArrived">
            <summary>
            Gets or sets whether or not this camera controller as arrived at its destination.  
            If it has, the camera controller should be switched to Next.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.Next">
            <summary>
            Gets or set the next camera controller in the chain.  This controller should
            be switched to when this controller triggers Arrived.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.CameraController`1.DebugMode">
            <summary>
            Gets or set debug control mode
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera">
            <summary>
            Encapsulates a geodetic camera that maintains a prediction camera.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera">
            <summary>
            Encapsulates a camera that operates relative to the surface of a WGS84 sphereoid.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera"/> 
            class.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera.#ctor(Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera"/> 
            class.
            </summary>
            <param name="camera"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera.CreateViewpoint">
            <summary>
            Creates a new viewpoint for the camera.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera.CreateViewpoint(Microsoft.MapPoint.Geometry.VectorMath.Viewpoint)">
            <summary>
            Creates a new viewpoint for the camera that is a copy of the provided one.
            </summary>
            <param name="viewpoint"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera.Viewpoint">
            <summary>
            Gets the viewpoint defining the location and orientation of this camera.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera.RenderingViewpoint">
            <summary>
            Gets the actual viewpoint that will be used for rendering.  
            This value should only be referenced by camera controllers that
            support the debug functionality of independantly changing the 
            rendering viewpoing from the camera viewpoint.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera"/> 
            class.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera.#ctor(Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera"/> 
            class.
            </summary>
            <param name="camera"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera.Dispose">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera.PredictedCameraValid">
            <summary>
            Gets or sets whether the predicted camera is valid.
            Setting it copies this camera into the predicted camera and sets
            it to valid.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera.MovementType">
            <summary>
            The manner in which the camera is moving.  Setting it is optional, and will explicitly state the movement type.  This may
            optimize the user experience by affecting the pattern in which data is loaded, for example, less detail 
            is loaded while actively moving.
            If this is left Unspecified, the value will be calculated from the predicted camera if it is valid.  Otherwise,
            simple Moving/None values are used based on the previous frame's camera values.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera.PredictedCamera">
            <summary>
            Gets the camera that should represent where the current camera will
            be in a short period of time.  This is optional, but may improve smoothness of
            data loading.  The optimal amount of time to look ahead 
            can vary upon the situation, but a good value is approximately half a second.
            If the predicted camera is not yet valid when this property is accessed, values are 
            copied from the base camera and the predicted camera is set to valid.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryReader">
            <summary>
            Same as BinaryReader except the protected method Read7BitEncodedInt
            is elevated to a public method called ReadEncodedInt32 which is
            analogous to ReadInt32.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the BinaryReader class based on the 
            supplied stream and using UTF8Encoding.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the BinaryReader class based on the 
            supplied stream and a specific character encoding.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryReader.ReadEncodedInt32">
            <summary>
            Reads a 4-byte signed integer from the current stream and advances 
            the current position of the stream. Assumes that the integer was
            written using Write7BitEncodedInt.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryReader.ReadEncodedUInt64">
            <summary>
            Read a 7-bit encoded ulong value.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryWriter">
            <summary>
            Same as BinaryWriter except the protected method Write7BitEncodedInt
            is elevated to a public method called BinaryWriterEncodedInt32 which is
            analogous to ReadInt32.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the BinaryWriter class based on the 
            supplied stream and using UTF8Encoding.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the BinaryWriter class based on the 
            supplied stream and a specific character encoding.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryWriter.WriteEncodedInt32(System.Int32)">
            <summary>
            Writes a 4-byte signed integer to the current stream and advances 
            the current position of the stream.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.EnhancedBinaryWriter.WriteEncodedUInt64(System.UInt64)">
            <summary>
            Write a 7-bit encoded ulong value.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryLayer">
            <summary>
            A piece of geometry added to the world via the GeometryManager.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryLayer.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryLayer.GetHashCode">
            <summary>
            Hashcode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryLayer.ToString">
            <summary>
            String representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryLayer.Id">
            <summary>
            The id of the geometry within its layer.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent">
            <summary>
            A replacement for MouseEventsArgs that is Serializable.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent"/> class.
            </summary>
            <param name="button">One of the System.Windows.Forms.MouseButtons values indicating which mouse
            button was pressed.</param>
            <param name="clicks">The number of times a mouse button was pressed.</param>
            <param name="x">The x-coordinate of a mouse click, in pixels.</param>
            <param name="y">The y-coordinate of a mouse click, in pixels.</param>
            <param name="delta">A signed count of the number of detents the wheel has rotated.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent.#ctor(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent"/> class.
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent.Button">
            <summary>
            Gets which mouse button was pressed.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent.Clicks">
            <summary>
            Gets the number of times the mouse button was pressed and released.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent.Delta">
            <summary>
            Gets a signed count of the number of detents the mouse wheel has rotated.
            A detent is one notch of the mouse wheel.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent.Location">
            <summary>
            Gets the location of the mouse during the generating mouse event.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent.X">
            <summary>
            Gets the x-coordinate of the mouse during the generating mouse event.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.MouseEvent.Y">
            <summary>
            Gets the y-coordinate of the mouse during the generating mouse event.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery">
            <summary>
            Class that encapsulates the process of getting a list of TileIds that 
            overlap a centerpoint + radius.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.#ctor(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.CoordinateSystems.Coordinate2D,System.Double,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="desiredTileLevelOfDetail"></param>
            <param name="centerLatLong"></param>
            <param name="radiusInMeters"></param>
            <param name="enforceQuads"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.GetHomeTile">
            <summary>
            Gets a representative or important tile for this query region.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.GetEnumerator">
            <summary>
            IEnumerable implementation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.ProcessTile(Microsoft.MapPoint.Rendering3D.Utility.TileId,Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.PointRadiusEnumerationState)">
            <summary>
            Recursively appends a list of tile ids that are included in the test, starting at the specified tile id.
            </summary>
            <param name="tileId"></param>
            <param name="state"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.IncludesBox(System.Double,System.Double,System.Double,System.Double,Microsoft.MapPoint.CoordinateSystems.Coordinate3D,Microsoft.MapPoint.CoordinateSystems.Coordinate3D,Microsoft.MapPoint.CoordinateSystems.Coordinate3D,Microsoft.MapPoint.CoordinateSystems.Coordinate3D,Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.PointRadiusEnumerationState)">
            <summary>
            Determines whether the point radius query includes the specified lat/lon box.  Also
            returns the dot product between the closest point on the box's edges and the center point of the query.
            If the center point is within the box the dot returned is one.
            </summary>
            <param name="minX"></param>
            <param name="minY"></param>
            <param name="maxX"></param>
            <param name="maxY"></param>
            <param name="northWest"></param>
            <param name="northEast"></param>
            <param name="southEast"></param>
            <param name="southWest"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.InclusivelyWithin(System.Double,System.Double,System.Double,System.Double,Microsoft.MapPoint.CoordinateSystems.Coordinate2D)">
            <summary>
            Returns whether the point is within the specified bounds.  Version that does not use a Box2d.
            </summary>
            <param name="minX"></param>
            <param name="minY"></param>
            <param name="maxX"></param>
            <param name="maxY"></param>
            <param name="latLong"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.CrossesArcSegment(System.Double,System.Double,Microsoft.MapPoint.CoordinateSystems.Coordinate3D,Microsoft.MapPoint.CoordinateSystems.Coordinate3D,Microsoft.MapPoint.CoordinateSystems.Coordinate3D,System.Double)">
            <summary>
            Determines whether or not the centerPoint+radiusArc cross between two points on a longitude line (p1 and p2).
            NOTE that this doesn't use the class's centerpoint because we toggle between the center and anti-center.
            </summary>
            <param name="longitude">The longitude on which p1 and p2 lie.</param>
            <param name="centerLongitude">The longitude of centerPoint.</param>
            <param name="startPoint"></param>
            <param name="stopPoint"></param>
            <param name="centerPoint"></param>
            <param name="radiusArc"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.FindClosestPlaneIntersect(System.Double,System.Double,Microsoft.MapPoint.CoordinateSystems.Coordinate3D,Microsoft.MapPoint.CoordinateSystems.Coordinate3D,Microsoft.MapPoint.CoordinateSystems.Coordinate3D)">
            <summary>
            Determines the closest point on a longitude line (p1 and p2) to a given point.
            NOTE that this doesn't use the class's centerpoint because we toggle between the center and anti-center.
            </summary>
            <param name="longitude">The longitude on which p1 and p2 lie.</param>
            <param name="centerLongitude">The longitude of centerPoint.</param>
            <param name="startPoint"></param>
            <param name="stopPoint"></param>
            <param name="centerPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.ClosestDelta(System.Double,System.Double)">
            <summary>
            If longitudeLeft is to the left of longitude right, then this will return the negative number of degrees.  If it is to the right of 
            right, it will return the positive number of degrees.
            </summary>
            <param name="longitudeLeft"></param>
            <param name="longitudeRight"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.GetBoundingBox(Microsoft.MapPoint.CoordinateSystems.Coordinate2D,System.Double)">
            <summary>
            Get a lat/long bounding box around a geometry defined by a lat/long point and a radius in meters.
            Rough estimate only.
            </summary>
            <param name="centerLatLong"></param>
            <param name="radiusMeters"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PointRadiusTileIdQuery.PointRadiusEnumerationState">
            <summary>
            A struct to hold the current enumeration state.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ICoverageMap">
            <summary>
            Defines the interface for an object that can provide coverage information
            for a related resource.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ICoverageMap.Covers(Microsoft.MapPoint.Rendering3D.Utility.TileId)">
            <summary>
            Returns whether this tile contains data.
            </summary>
            <param name="tileId">The tile we want information for.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ICoverageMap.Covers(Microsoft.MapPoint.Rendering3D.Utility.TileId,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Returns whether the spatial area of this tile contains data at the specified level of detail.
            </summary>
            <param name="tileId">The tile we want information for.</param>
            <param name="level">The level we want information for.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ICoverageMap.GetCoverage(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Gets all the tiles that have coverage at the specified level of detail.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ICoverageMap.Loaded">
            <summary>
            Returns whether the map is fully loaded.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.SimpleCoverageMap">
            <summary>
            A simple representation of a coverage map for a tile source
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.SimpleCoverageMap.#ctor(System.Xml.XPath.XPathNavigator)">
            <summary>
            Public constructor
            </summary>
            <param name="coverageMapXml"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.SimpleCoverageMap.#ctor(Microsoft.MapPoint.Geometry.Geometry2.Box2[],Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Create a simple coverage map directly
            </summary>
            <param name="boundingBoxes">Bounding boxes for which this coverage map will return true for Covers.  Null means the whole world.</param>
            <param name="minimum">The smallest LOD for which this coverage map will return true for Covers.</param>
            <param name="maximum">The largest LOD for which this coverage map will return true for Covers.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.SimpleCoverageMap.GetCoverage(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Get an enumeration of all the tiles covered at this LOD.  Null if no specific coverage list available.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.SimpleCoverageMap.Covers(Microsoft.MapPoint.Rendering3D.Utility.TileId,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Determines if the given tile is covered at the specified level of detail
            </summary>
            <param name="tileId"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.SimpleCoverageMap.Covers(Microsoft.MapPoint.Rendering3D.Utility.TileId)">
            <summary>
            Determines if the TileId is covered
            </summary>
            <param name="tileId"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.SimpleCoverageMap.Loaded">
            <summary>
            True if the map has been loaded
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.SingleImageDataSource">
            <summary>
            A datasource that contains only one image.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.#ctor(System.Drawing.Bitmap,Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Simple constructor.
            </summary>
            <param name="image">The image to display.</param>
            <param name="bottomLeft">The world position of the bottom left corner of the image.</param>
            <param name="topRight">The world position of the top right corner of the image.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.#ctor(System.Drawing.Bitmap,Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Add an image to the ground.  Three corners are specified, the bottom right corner being determined by the top left.
            </summary>
            <param name="image">The image to display.</param>
            <param name="bottomLeft">The world position of the bottom left corner of the image.</param>
            <param name="topRight">The world position of the top right corner of the image.</param>
            <param name="topLeft">The world position of the top left corner of the image.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.#ctor(System.Drawing.Bitmap,Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon,System.Double)">
            <summary>
            Add an image to the ground.
            </summary>
            <param name="image">The image to display.</param>
            <param name="bottomLeft">The world position of the bottom left corner of the image.</param>
            <param name="topRight">The world position of the top right corner of the image.</param>
            <param name="rotation">Clockwise rotation of the image in degrees.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.#ctor(Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider,Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Simple constructor.
            </summary>
            <param name="image">The image to display.</param>
            <param name="bottomLeft">The world position of the bottom left corner of the image.</param>
            <param name="topRight">The world position of the top right corner of the image.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.#ctor(Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider,Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Add an image to the ground.  Three corners are specified, the bottom right corner being determined by the top left.
            </summary>
            <param name="image">The image to display.</param>
            <param name="bottomLeft">The world position of the bottom left corner of the image.</param>
            <param name="topRight">The world position of the top right corner of the image.</param>
            <param name="topLeft">The world position of the top left corner of the image.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.#ctor(Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider,Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon,System.Double)">
            <summary>
            Add an image to the ground.
            </summary>
            <param name="image">The image to display.</param>
            <param name="bottomLeft">The world position of the bottom left corner of the image.</param>
            <param name="topRight">The world position of the top right corner of the image.</param>
            <param name="rotation">Clockwise rotation of the image in degrees.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.QueryPrimitivesInternal(Microsoft.MapPoint.Data.PrimitiveSpatialQuery,System.Boolean,Microsoft.MapPoint.Data.DataSource.QueryProgress)">
            <summary>
            Query primitives in this datasource.
            </summary>
            <param name="specification"></param>
            <param name="uniqueEntities"></param>
            <param name="progress"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.Cleanup">
            <summary>
            Clean up any resources we're holding on to.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.DeletePrimitivesByEntityId(Microsoft.MapPoint.Data.EntityId)">
            <summary>
            Not implemented.
            </summary>
            <param name="entityId"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.AddPrimitivesInternal(Microsoft.MapPoint.Data.PrimitiveSpecification[],System.Int32[],System.Double,System.Double)">
            <summary>
            Not implemented.
            </summary>
            <param name="primitiveSpecifications"></param>
            <param name="bucketIds"></param>
            <param name="minScaleDenominator"></param>
            <param name="maxScaleDenominator"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.DeletePrimitivesInternal(Microsoft.MapPoint.Data.PrimitiveId[])">
            <summary>
            Not implemented.
            </summary>
            <param name="primitiveIds"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.SingleImageDataSource.ContainsEntityId(Microsoft.MapPoint.Data.EntityId)">
            <summary>
            Not implemented.
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.CachedBitmapRasterPatch">
            <summary>
            A RasterPatch2 that can hold on to a cached version of itself in bitmap form, with opacity possibly applied
            directly.  Used only in WorldMemoryTerrainMeshBuilder.CompositeNewTextureFromSources
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.Spin">
            <summary>
            Enumeration of the directions of spin.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Spin.Clockwise">
            <summary>
            Clockwise spin.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Spin.None">
            <summary>
            No spin preference.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Spin.CounterClockwise">
            <summary>
            Counter clockwise spin.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.State.PointerIntersectionData">
            <summary>
            Represents all objects that intersect a ray cast from the current camera position
            to the current pointer position.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.State.PointerIntersectionData.#ctor(Microsoft.MapPoint.Geometry.VectorMath.Ray3D,Microsoft.MapPoint.Geometry.VectorMath.Ray3DIntersectionList)">
            <summary>
            Ctor
            </summary>
            <param name="ray"></param>
            <param name="list"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.State.PointerIntersectionData.GetIntersections">
            <summary>
            Gets all the objects that intersect a ray from the camera to the pointer position.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.PointerIntersectionData.CameraToPointer">
            <summary>
            A ray from the camera to the pointer position.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.TerrainTagProperties">
            <summary>
            Singleton that is used internally to perform intersection predicate testing on terrain.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TerrainTagProperties.Instance">
            <summary>
            Gets the singleton instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TerrainTagProperties.#ctor">
            <summary>
            This class is a singleton.  Use TerrainTagProperties.Instance.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TerrainTagProperties.IsSolid">
            <summary>
            Gets that terrain is solid.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TerrainTagProperties.IntersectionTagType">
            <summary>
            Gets TerrainTag as the type.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ModelTagProperties">
            <summary>
            Singleton that is used internally to perform intersection predicate testing on model objects.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.ModelTagProperties.Instance">
            <summary>
            Gets the singleton instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ModelTagProperties.#ctor">
            <summary>
            This class is a singleton.  Use ModelTagProperties.Instance.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ModelTagProperties.IsSolid">
            <summary>
            Gets that models is solid.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ModelTagProperties.IntersectionTagType">
            <summary>
            Gets ModelTag as the type.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryTagProperties">
            <summary>
            Singleton that is used internally to perform intersection predicate testing on pushpins and vectors.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryTagProperties.Instance">
            <summary>
            Gets the singleton instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryTagProperties.#ctor">
            <summary>
            This class is a singleton.  Use WorldGeometryTagProperties.Instance.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryTagProperties.IsSolid">
            <summary>
            Gets that world geometry is solid.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryTagProperties.IntersectionTagType">
            <summary>
            Gets WorldGeometryTag as the type.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.TerrainTag">
            <summary>
            A tag returned for intersections against the ground.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TerrainTag.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TerrainTag.Tag">
            <summary>
            The tag, if any, associated with this tile.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ModelTag">
            <summary>
            A tag returned for intersections against 3D models like built in building models and high resolution models.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ModelTag.#ctor(System.Object)">
            <summary>
            Constructs a new ModelTag
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ModelTag.GetSubsetIdFromFace(System.Int32)">
            <summary>
            Gets the subset id from a model face.
            </summary>
            <param name="faceIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ModelTag.Equals(Microsoft.MapPoint.Rendering3D.Utility.ModelTag)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ModelTag.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ModelTag.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ModelTag.Tag">
            <summary>
            The tag, if any, associated with this model.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ModelTagWithPrimitive">
            <summary>
            Model tag that contains a primitive
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ModelTagWithPrimitive.#ctor(System.Object,System.Object)">
            <summary>
            Constructs a new ModelTagWithPrimitive
            </summary>
            <param name="tag"></param>
            <param name="primitive"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ModelTagWithPrimitive.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.ModelTagWithPrimitive.Primitive">
            <summary>
            Primitive associated with model. May be null.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryTag">
            <summary>
            A tag returned for intersections against WorldGeometry such as pushpins and vectors.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryTag.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometryTag.Geometry">
            <summary>
            The source geometry intersected.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.ConstantElevationDataSource">
            <summary>
            A DataSource that returns a constant elevation value.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantElevationDataSource.#ctor(System.Double)">
            <summary>
            Constructs a DataSource with a single constant elevation.
            </summary>
            <param name="elevation">The elevation to use.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantElevationDataSource.QueryPrimitivesInternal(Microsoft.MapPoint.Data.PrimitiveSpatialQuery,System.Boolean,Microsoft.MapPoint.Data.DataSource.QueryProgress)">
            <summary>
            Override QueryPrimitivesInternal.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantElevationDataSource.DeletePrimitivesByEntityId(Microsoft.MapPoint.Data.EntityId)">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantElevationDataSource.AddPrimitivesInternal(Microsoft.MapPoint.Data.PrimitiveSpecification[],System.Int32[],System.Double,System.Double)">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantElevationDataSource.DeletePrimitivesInternal(Microsoft.MapPoint.Data.PrimitiveId[])">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantElevationDataSource.ContainsEntityId(Microsoft.MapPoint.Data.EntityId)">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.ConstantColorDataSource">
            <summary>
            A DataSource that returns a constant color value.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantColorDataSource.#ctor(System.Drawing.Color)">
            <summary>
            Constructs a DataSource with the specified color.
            </summary>
            <param name="color">The color this DataSource will use.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantColorDataSource.QueryPrimitivesInternal(Microsoft.MapPoint.Data.PrimitiveSpatialQuery,System.Boolean,Microsoft.MapPoint.Data.DataSource.QueryProgress)">
            <summary>
            Override QueryPrimitivesInternal.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantColorDataSource.DeletePrimitivesByEntityId(Microsoft.MapPoint.Data.EntityId)">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantColorDataSource.AddPrimitivesInternal(Microsoft.MapPoint.Data.PrimitiveSpecification[],System.Int32[],System.Double,System.Double)">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantColorDataSource.DeletePrimitivesInternal(Microsoft.MapPoint.Data.PrimitiveId[])">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.ConstantColorDataSource.ContainsEntityId(Microsoft.MapPoint.Data.EntityId)">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.TileId">
            <summary>
            Represents a quadtree structure that divides a mercator coordinate system into rectangular tiles.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.RangeBit">
            <summary>
            Bit indicating the TileId is a range
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.MinLatitude">
            <summary>
            Minimum Latitude value (in degrees) that makes sense to represent using this tile system.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.MaxLatitude">
            <summary>
            Maximum Latitude value (in degrees) that makes sense to represent using this tile system.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.MinLongitude">
            <summary>
            Minimum Longitude value (in degrees) that makes sense to represent using this tile system.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.MaxLongitude">
            <summary>
            Maximum Longitude value (in degrees) that makes sense to represent using this tile system.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.id">
            <summary>
            Internal representation of TileId
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.Null">
            <summary>
            A null TileId
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.Root">
            <summary>
            The root TileId
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.ByteDeinterleavor">
            <summary>
            maps bit-interleaved x,y to separated x,y for each byte value
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.#ctor(System.UInt64)">
            <summary>
            Constructs a new TileId from a specific TileId code
            </summary>
            <param name="id">The TileId code</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.FindHighestSetBit(System.UInt64)">
            <summary>
            Returns the zero-based position of the highest-order bit set for a given ulong.
            Note:  returns 0 for both 0 and 1.  This is fine for our purposes.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.#ctor(System.UInt64,System.Boolean)">
            <summary>
            Constructs a new TileId from a specific TileId code.  Does not validate results.
            </summary>
            <param name="id">The TileId code</param>
            <param name="ignore"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.#ctor(Microsoft.MapPoint.Rendering3D.Utility.TileId,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Constructs a new TileId that is a range of TileIds.
            The range of TileId's is the children of tileId at the
            specified LOD
            </summary>
            <param name="tileId">Parent TileId of range</param>
            <param name="lod">LOD range</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.#ctor(System.Double,System.Double,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Constructs a new TileId from mercator coordiantes and LOD
            </summary>
            <param name="mercatorX">mercator X coordinate {-0.5 to +0.5)</param>
            <param name="mercatorY">mercator Y coordinate {-0.5 to +0.5)</param>
            <param name="levelOfDetail">Level of Detail</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.#ctor(Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileId"/> class that
            encompases a specific point on the earth.
            </summary>
            <param name="position">Point on the earth to find containing grid.</param>
            <param name="levelOfDetail">Level of Detail of grid set to use.</param>		
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.#ctor(Microsoft.MapPoint.Rendering3D.Utility.TilePosition)">
            <summary>
            Construts a tile from an X,Y position and LOD
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetRange(Microsoft.MapPoint.Rendering3D.Utility.TileId@,Microsoft.MapPoint.Rendering3D.Utility.TileId@)">
            <summary>
            If the TileId is a range, returns the beginning and end of range
            </summary>
            <param name="start">Beginning TileId</param>
            <param name="end">Ending TileId</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.#ctor(System.String)">
            <summary>
            Creates a new TileId from 'QuadKey' format
            Will throw an exception for strings containing
            characters outside of the [0123] set
            </summary>
            <param name="code">QuadKey input</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.Equals(System.Object)">
            <summary>
            Tests for equality to an object. Always inequal to objects
            of another type
            </summary>
            <param name="obj">Object to test</param>
            <returns>Truth of equality</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetHashCode">
            <summary>
            Returns the hash code of the TileId, which is simply the hash
            of the internal id code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.ToString">
            <summary>
            Converts this object into a string
            </summary>
            <returns>String representation of TileId (not quadKey)</returns>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.RequestCodeChars">
            <summary>
            These are the valid characters that can make up a request code.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.RequestBalanceSelectors">
            <summary>
            These are the valid characters that can make up a request code.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetRequestCode">
            <summary>
            Gets the quad-key code used to request this tile from a tile server
            </summary>
            <returns>QuadKey representation of TileId</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetRequestBalanceSelector">
            <summary>
            Gets the DNS prefix used for load balancing
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetSimpleRequestBalanceSelector">
            <summary>
            Gets the DNS prefix used for load balancing
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.op_Equality(Microsoft.MapPoint.Rendering3D.Utility.TileId,Microsoft.MapPoint.Rendering3D.Utility.TileId)">
            <summary>
            Tests for equality between two TileIds
            </summary>
            <param name="tile1">Left TileId operand</param>
            <param name="tile2">Right TileId operand</param>
            <returns>Truth of equality</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.op_Inequality(Microsoft.MapPoint.Rendering3D.Utility.TileId,Microsoft.MapPoint.Rendering3D.Utility.TileId)">
            <summary>
            Tests for inequality between two TileIds
            </summary>
            <param name="tile1">Left TileId operand</param>
            <param name="tile2">Right TileId operand</param>
            <returns>Truth of inequality</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CompareTo(Microsoft.MapPoint.Rendering3D.Utility.TileId)">
            <summary>
            Compares this TileId to another. Implemented as the difference
            between internal ids
            </summary>
            <param name="other">TileId with which to compare</param>
            <returns>Comparison value</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.Equals(Microsoft.MapPoint.Rendering3D.Utility.TileId)">
            <summary>
            Tests for inequality between another TileIds
            </summary>
            <param name="other">TileId operand</param>
            <returns>Truth of equality</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculateTileLevelOfDetail">
            <summary>
            Gets the depth in the quadtree of the TileId. Depth 0 is the
            topmost TileId.
            </summary>
            <returns>Depth value</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculateTileLevelOfDetail(System.Boolean)">
            <summary>
            Gets the depth in the quadtree of the TileId. Depth 0 is the
            topmost TileId.  Does no validation.
            </summary>
            <returns>Depth value</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetLevelOfDetailDifference(Microsoft.MapPoint.Rendering3D.Utility.TileId)">
            <summary>
            Returns the difference between levels of detail of this tile and the other.
            </summary>
            <param name="other">The tile to compare against.</param>
            <returns>Positive values if the passed in tile Id is a higher level of detail</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetLevelOfDetailDifferenceToParent(Microsoft.MapPoint.Rendering3D.Utility.TileId)">
            <summary>
            Returns the difference between levels of detail
            if the other tile is a child of the current tile.
            </summary>
            <param name="other"></param>
            <returns>Positive values if the passed in tile Id is a child, -1 otherwise</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetMercatorCoordinates">
            <summary>
            This will get mercator space in the interval of [-0.5, +0.5]
            to the upper left of the tile
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetMercatorSpaceValues(System.Double@,System.Double@,System.UInt32@)">
            <summary>
            This will get mercator space in the interval of [-0.5, +0.5]
            to the upper left of the tile
            </summary>
            <param name="baseX">The normalized coordinate for the left of the tile</param>
            <param name="baseY">The normalized coordinate for the bottom of the tile</param>
            <param name="numberOfCells">The number of tile cells in x and y dimensions at this level of detail</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculateLatLongFromMercator(Microsoft.MapPoint.CoordinateSystems.Coordinate2D)">
            <summary>
            Converts global mercator space coordinates into latitude/longitude.
            </summary>
            <param name="mercatorCoordinates">Normalized x,y values in mercator space ranging from -0.5 to 0.5</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculateMercatorFromLatLong(Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Converts from lat/lon to global mercator.
            </summary>
            <param name="latLong">Lat Long</param>
            <returns>Mercator coordinates</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculateLatitudeFromMercatorY(System.Double)">
            <summary>
            Determines latitude from global mercator space coordinates
            </summary>
            <param name="mercatorY">Normalized y value in mercator space ranging from -0.5 to 0.5</param>
            <returns>Latitude in degrees.</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculateLongitudeFromMercatorX(System.Double)">
            <summary>
            Determines longitude from global mercator space coordinates
            </summary>
            <param name="mercatorX">Normalized X value in mercator space ranging from -0.5 to 0.5</param>
            <returns>Longitude in degrees.</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculateLatLongAtPixel(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the Latitude and Longitude at a given coordinate in pixel space.
            </summary>
            <param name="xPixel"></param>
            <param name="yPixel"></param>
            <param name="pixelWidth"></param>
            <param name="pixelHeight"></param>
            <returns>Coordinate2D with calculated latitude and longitude</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculatePixelAtLatLong(Microsoft.MapPoint.Rendering3D.LatLon,System.Int32,System.Int32)">
            <summary>
            Calculates the coordinates in pixel space of the given Latitude and Longitude.
            </summary>
            <param name="latLon">The position of interest.</param>
            <param name="pixelWidth">The width in pixels of the raster area covering this tile</param>
            <param name="pixelHeight">The height in pixels of the raster area covering this tile</param>
            <returns>Coordinate2D with calculated x and y.  Note these may be negative, or outside the bounds of the tile if input lat/long is outside</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculatePixelAtMercator(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Calculates the coordinates in pixel space of the given mercator coordinates.
            </summary>
            <param name="mercatorX">Normalized x value in mercator space ranging from -0.5 to 0.5</param>
            <param name="mercatorY">Normalized y value in mercator space ranging from -0.5 to 0.5</param>
            <param name="pixelWidth">The width in pixels of the raster area covering this tile</param>
            <param name="pixelHeight">The height in pixels of the raster area covering this tile</param>
            <returns>Coordinate2D with calculated x and y.  Note these may be negative, or outside the bounds of the tile if input lat/long is outside</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.CalculateBoxAndCenter(Microsoft.MapPoint.Rendering3D.LatLon@,Microsoft.MapPoint.Rendering3D.LatLon@,Microsoft.MapPoint.Rendering3D.LatLon@)">
            <summary>
            Get the min, max and center points on the tile all at once, in lat long.
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <param name="center"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetCenterLatLong">
            <summary>
            Calculates the center coordinate.
            </summary>
            <returns>Center of the tile in WGS84.</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetLatLongBoundingBox">
            <summary>
            Returns the bounding points of the Tile in lat/lon degrees
            </summary>
            <returns>Bounding Box in WGS84</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetMercatorBoundingBox">
            <summary>
            Returns the bounding points of the Tile in mercator space
            </summary>
            <returns>Bounding Box in mercator</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetLatLongBoundingBox(Microsoft.MapPoint.Geometry.Geometry2.Box2)">
            <summary>
            Calculates the bounding box of a tile and sets the min/max coordinates
            on the Box2 passed in
            </summary>
            <param name="box">Bounding Box object to fill in</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetMercatorBoundingBox(Microsoft.MapPoint.Geometry.Geometry2.Box2)">
            <summary>
            Calculates the bounding box of a tile and sets the min/max coordinates
            on the Box2 passed in
            </summary>
            <param name="box">Bounding Box object to fill in</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.Contains(Microsoft.MapPoint.Geometry.Geometry2.Box2,Microsoft.MapPoint.Rendering3D.LatLon)">
             <summary>
            
             </summary>
             <TODO>
             TODO: Is there the equivalent of this already built into the platform.  
             Pretty sure there is, but if not, put it in.
             </TODO>
             <param name="box"></param>
             <param name="point"></param>
             <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.Contains(Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Returns whether or not this tile id contains the specified point in lat/long degrees.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetParent">
            <summary>
            Gets the parent of this TileId
            </summary>
            <returns>Parent of TileId, or Null if TileId is topmost</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetParent(System.Boolean)">
            <summary>
            Gets the parent of this TileId.  Does not validate input.
            </summary>
            <returns>Parent of TileId, or Null if TileId is topmost</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetParent(System.Int32)">
            <summary>
            Gets the parent of this TileId
            </summary>
            <param name="delta"></param>
            <returns>Parent of TileId, or Null if TileId is topmost</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetChildren">
            <summary>
            Gets the children of this TileId
            </summary>
            <returns>An array of the four children of this TileId</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetChild(Microsoft.MapPoint.Rendering3D.Utility.TileId.TileQuadrant)">
            <summary>
            Gets a specific child of this TileId
            </summary>
            <param name="dir">Which of the four children to retrieve</param>
            <returns>Child TileId</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetChild(Microsoft.MapPoint.Rendering3D.Utility.TileId.TileQuadrant,System.Boolean)">
            <summary>
            Gets a specific child of this TileId.  Does no validation.
            </summary>
            <param name="dir">Which of the four children to retrieve</param>
            <param name="noValidate"></param>
            <returns>Child TileId</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.IsChildOf(Microsoft.MapPoint.Rendering3D.Utility.TileId)">
            <summary>
            Checks if tile is a child of passed tileId
            </summary>
            <param name="tileId">TileId to check against</param>
            <returns>Truth of relationship</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.IsChildOf(Microsoft.MapPoint.Rendering3D.Utility.TileId,System.Int32)">
            <summary>
            Checks if tile is a child of passed tileId within a limited range of levels of detail.
            </summary>
            <param name="tileId">TileId to check against</param>
            <param name="maximumLodDifference">Maximum level of detail separation between the tileIds</param>
            <returns>Truth of relationship</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetQuadNeighborWrapped(System.Boolean)">
            <summary>
            A tile has 4 neighbors. Two of those neighbors must share a parent. This function
            returns the neighbors that do not share a parent
            </summary>
            <param name="northSouth">If true, gets either the north or south neighbor, if false, gets the east/west neighbor</param>
            <returns>Resulting TileId</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetNorth">
            <summary>
            Gets the TileId at the same LOD directly north of this TileId.
            If there is no north tile, return Null
            </summary>
            <returns>Northern TileId, or Null</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetSouth">
            <summary>
            Gets the TileId at the same LOD directly south of this TileId.
            If there is no south tile, return Null
            </summary>
            <returns>Southern TileId, or Null</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetWest">
            <summary>
            Gets the TileId at the same LOD directly west of this TileId.
            If there is no west tile, return Null
            </summary>
            <returns>Western TileId, or Null</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetWestWrapped">
            <summary>
            Gets the TileId at the same LOD directly west of this TileId.
            If there is no west tile, wrap around
            </summary>
            <returns>Western TileId, may not be null</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetEast">
            <summary>
            Gets the TileId at the same LOD directly east of this TileId.
            If there is no east tile, return Null
            </summary>
            <returns>Eastern TileId, or Null</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetEastWrapped">
            <summary>
            Gets the TileId at the same LOD directly east of this TileId.
            If there is no east tile, wrap around
            </summary>
            <returns>Eastern TileId, may not be null</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetPosition">
            <summary>
            Gets the position of the tile.  Note the position is relative to 
            coordinates in the top left of the space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetTileOffsetAndScale(Microsoft.MapPoint.Rendering3D.Utility.TileId,System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets the normalized extent of this tile within the given parent tile.
            </summary>
            <param name="parentTile">A tile that contains this tile.</param>
            <param name="offsetX">The X offset of this tile's upper left corner from the parent's upper left corner.</param>
            <param name="offsetY">The Y offset of this tile's upper left corner from the parent's upper left corner.</param>
            <param name="width">The width of this tile relative to the parent tile.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.GetCoordinates(System.UInt32@,System.UInt32@)">
            <summary>
            Retrieves the Grid coordinates of the TileId, including the
            space of the LOD. The space is how many tiles wide and high
            the LOD is.  Note this is relative to coordinates in the 
            bottom left of the space, unlike GetPosition above which 
            is relative the to top left
            </summary>
            <param name="x">TileId's X coordinate</param>
            <param name="y">TileId's Y coordinate</param>
            <returns>TileId's width and height space</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.VerifyNotNull">
            <summary>
            Assertion if this == Null
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.VerifyNotNull(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Assertion if lod == Null
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.VerifyNotRange">
            <summary>
            Assertion if this is a range
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.VerifyRange">
            <summary>
            Assertion if this is not a range
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.VerifyLodLessThan(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Assertion if this Lod is greater than passed lod
            </summary>
            <param name="lod">TileLevelOfDetail to compare</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileId.VerifyLodLessThanMax">
            <summary>
            Assertion if this Lod is greater than the maximum lod.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileId.Quadrant">
            <summary>
            The corner of its parent that this tile is in.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileId.IsRange">
            <summary>
            Returns if this TileId is a range or not
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileId.Value">
            <summary>
            Gets the value of this Tile Id.		
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileId.Lod">
            <summary>
            Gets the tile LOD
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.TileId.TileQuadrant">
            <summary>
            Directions enumeration, for use primarily
            in choosing a child TileId
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.TileQuadrant.Northwest">
            <summary>
            The upper left quad, coded "0".
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.TileQuadrant.Northeast">
            <summary>
            The upper right quad, coded "1".
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.TileQuadrant.Southwest">
            <summary>
            The lower left quad, coded "2".
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileId.TileQuadrant.Southeast">
            <summary>
            The lower right quad, coded "3".
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.ByteDeinterleavor">
            <summary>
            maps bit-interleaved x,y to separated x,y for each byte value
            special case - last byte is stored in DataLast array
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ByteDeinterleavor.#ctor">
            <summary>
            initialized deinterleave maps
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ByteDeinterleavor.FindX(System.UInt32,System.Boolean,System.UInt32@)">
            <summary>
            given the interleaved byte value n returns deinterleaved x
            last byte with additional 1 is handled separately
            </summary>
            <param name="n"></param>
            <param name="bLast"></param>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.ByteDeinterleavor.FindY(System.UInt32)">
            <summary>
            given the interleaved byte value n returns deinterleaved x
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail">
            <summary>
            Wrapper structure for a Level of Detail value.  This should be 
            reasonably efficient and provides range checking on the value.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.MinValue">
            <summary>
            The smallest Level of Detail that is supported by this class.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.MaxValue">
            <summary>
            The largest Level of Detail that is supported by this class.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.NullValue">
            <summary>
            Gets the level of detail value that is used to represent no level of detail.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.MinLod">
            <summary>
            The smallest Level of Detail that is supported by this class.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.MaxLod">
            <summary>
            The largest Level of Detail that is supported by this class.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.Null">
            <summary>
            Gets the level of detail value that is used to represent no level of detail.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail"/> struct.
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.#ctor(System.Byte,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail"/> struct.
            Does not validate input.
            </summary>
            <param name="v"></param>
            <param name="noValidate"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_Explicit(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)~System.Byte">
            <summary>
            Allows explicit casting of <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail"/> into 
            <see cref="T:System.Byte"/>.
            </summary>
            <param name="levelOfDetail"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_Explicit(System.Byte)~Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail">
            <summary>
            Allows explicit casting of <see cref="T:System.Byte"/> into 
            <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail"/>.  This causes validation code to be 
            run.
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_Equality(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Overloads the equality operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_Inequality(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Overloads the inequality operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_LessThan(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Less Than
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.Compare(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Comparison
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.Compare(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Comparison
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_GreaterThan(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Greater Than
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_LessThanOrEqual(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Less Than or Equal To
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_GreaterThanOrEqual(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Greater Than or Equal To
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.Increment">
            <summary>
            Increment operation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_Increment(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Increment
            </summary>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.Decrement">
            <summary>
            Decrement
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.op_Decrement(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Decrement
            </summary>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.Equals(System.Object)">
            <summary>
            Overrides <see cref="M:System.Object.Equals(System.Object)"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.GetHashCode">
            <summary>
            Overrides <see cref="M:System.Object.GetHashCode"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.ToString">
            <summary>
            Gets a string representation of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail.Value">
            <summary>
            Gets the raw value for the Level of detail
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.TilePosition">
            <summary>
            The position of a <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileId"/> within a specific level of detail
            of grids.  This is an alternate, more verbose, expression of a single
            grid's Id.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.#ctor(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TilePosition"/> 
            struct.
            </summary>
            <param name="levelOfDetail">See <see cref="P:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.LevelOfDetail"/>.</param>
            <param name="x">See <see cref="P:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.X"/>.</param>
            <param name="y">See <see cref="P:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.Y"/>.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.Equals(System.Object)">
            <summary>
            Overrides <see cref="M:System.Object.Equals(System.Object)"/>.
            </summary>
            <param name="obj"></param>
            <returns>True if the object equals this grid id.</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.GetHashCode">
            <summary>
            Overrides <see cref="M:System.Object.GetHashCode"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.op_Equality(Microsoft.MapPoint.Rendering3D.Utility.TilePosition,Microsoft.MapPoint.Rendering3D.Utility.TilePosition)">
            <summary>
            Override equality operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.op_Inequality(Microsoft.MapPoint.Rendering3D.Utility.TilePosition,Microsoft.MapPoint.Rendering3D.Utility.TilePosition)">
            <summary>
            Override inequality operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.ToString">
            <summary>
            Gets a string representation of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.LevelOfDetail">
            <summary>
            Gets or sets the level of detail for this position.
            </summary>		
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.X">
            <summary>
            Gets or sets the horizontal offset for this position.
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TilePosition.Y">
            <summary>
            Gets or sets the vertical offset for this position.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.TileProperties">
            <summary>
            Meta data about a specific tile as derived from the content manifest
            and coverage maps.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileProperties.#ctor(Microsoft.MapPoint.Rendering3D.Utility.TileId,System.Boolean,System.DateTime,System.Int32,System.Uri)">
            <summary>
            Ctor.
            </summary>
            <param name="tileId">The tile that this properties is for.</param>
            <param name="isAvailable">Whether this tile is available, as indicated by the coverage map.  If unknown, use true.</param>
            <param name="lastModified">The date this tile was last modified.  Used for caching.</param>
            <param name="expectedGeneration">The generation of the tile.  Specify -1 if not known.  Used for caching.</param>
            <param name="uri">The path from which this tile's data may be retrieved.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileProperties.#ctor(Microsoft.MapPoint.Rendering3D.Utility.TileId,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Uri)">
            <summary>
            Ctor.
            </summary>
            <param name="tileId">The tile that this properties is for.</param>
            <param name="isAvailable">Whether this tile is available, as indicated by the coverage map.  If unknown, use true.</param>
            <param name="lastModified">The date this tile was last modified.  Used for caching.</param>
            <param name="cachingDate">The date to save into the cache.</param>
            <param name="expectedGeneration">The generation of the tile.  Specify -1 if not known.  Used for caching.</param>
            <param name="uri">The path from which this tile's data may be retrieved.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileProperties.ToString">
            <summary>
            String representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileProperties.TileId">
            <summary>
            Identifies the location and level of detail of the tile.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileProperties.IsAvailable">
            <summary>
            Indicates whether the tile is available on the server.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileProperties.LastModified">
            <summary>
            The time that the tile was last modified on the server.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileProperties.CachingDate">
            <summary>
            The time to use when caching the data.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileProperties.ExpectedGeneration">
            <summary>
            The generation of data we expect to get.  -1 means none available.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.TileProperties.Uri">
            <summary>
            The URI that can be used to retrieve the tile from the server.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges">
            <summary>
            Encapsulates a list of scale ranges and the levels of detail that they represent.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges"/> class, 
            creating default ranges based on a power-of-2 function.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges"/> class, 
            creating default ranges based on a power-of-2 function.
            </summary>
            <param name="shiftFactor">Bias to shift scaling</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.#ctor(System.Double[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges"/> class.
            </summary>
            <param name="scaleBreaks">The scale denominator values, starting at the smallest value, between each scale range.</param>
            <param name="levelOfDetailValues">The value of the level of detail in which each scale range will be stored.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges"/> class 
            by taking a string that describes the scale to LoD mapping.
            </summary>
            <param name="scaleRangeString">A string consisting of the first 
            scale break value, a pipe, the first level of detail value, a pipe,
            the next scale break value, and so on, ending in the last scale 
            break value.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.AdjustOriginalScaleMappingBy(System.Int32)">
            <summary>
            Shifts the scale breakdowns by the given value
            So if you had a scale breakdown of 1|19|1000|18|10000|17|etc...
            and passed a shift value of -1, the scale ranges would be
            1|18|1000|17|10000|etc..
            Passing a value of 1 would product
            1|20|1000|19|10000|18|etc...
            Pass 0 to restore original scale mapping
            </summary>
            <param name="shiftBy"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.ToString">
            <summary>
            Creates a string representation of the scale ranges that is 
            appropriate for passing into the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges"/> 
            constructor that takes a string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.ScaleToTileLevelOfDetailValue(System.Double)">
            <summary>
            Returns the LOD that matches the given scale
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.TileLevelOfDetailToScale(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail)">
            <summary>
            Given a level of detail, return a very rough scale estimate.  If 
            the LoD represents a range, the scale will be half way through that
            range.  If it does not, the nearest scale break will be returned.
            </summary>
            <param name="levelOfDetail"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.ScaleBoundsForLevelOfDetail(Microsoft.MapPoint.Rendering3D.Utility.TileLevelOfDetail,System.Double@,System.Double@)">
            <summary>
            Given a level of detail, the minimum and maximum allowable scale values.
            </summary>
            <param name="levelOfDetail"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.Equals(Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges)">
            <summary>
            Gets whether this set of scale ranges exactly matches another set of scale ranges.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.TileScaleRanges.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.Types.ILocationListener">
            <summary>
            Defines an object that is interested in being informed when data changes at
            a given location.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.Types.ILocationListener.LocationChanged(System.Double,System.Double)">
            <summary>
            Called when the location of interest changes.
            </summary>
            <param name="groundElevation">The current elevation of the ground at this point.</param>
            <param name="objectElevation">The current highest elevation of any solid object at this point.</param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Types.ILocationListener.Location">
            <summary>
            The location we are interested in.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Types.ILocationListener.MaxLod">
            <summary>
            The minimum lod we are interested in for this location.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Types.ILocationListener.MinLod">
            <summary>
            The maximum lod we are interested in for this location.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.Types.IMultipleLocationListener">
            <summary>
            Defines an object that is interested in being informed when data changes at
            a a set of given locations.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Types.IMultipleLocationListener.LocationList">
            <summary>
            A list of locations we are interested in.  May be null.  If non-null,
            this is used instead of <see cref="P:Microsoft.MapPoint.Rendering3D.Utility.Types.ILocationListener.Location"/>.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Types.IMultipleLocationListener.BoundingArea">
            <summary>
            A lat/lon bounding region of all the locations in <see cref="P:Microsoft.MapPoint.Rendering3D.Utility.Types.IMultipleLocationListener.LocationList"/>.  May be
            null.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.LatLon">
            <summary>
            Encapsulates a location structure consisting of a Latitude and 
            Longitude in radians or degrees.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.LatLon.Empty">
            <summary>
            An uninitialized <see cref="T:Microsoft.MapPoint.Rendering3D.LatLon"/>.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.CreateUsingDegrees(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLon"/> 
            structure using degrees.
            </summary>
            <param name="latitude">Latitude expressed in degrees.</param>
            <param name="longitude">Longitude expressed in degrees.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.CreateUsingRadians(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLon"/> 
            structure using radians.
            </summary>
            <param name="latitude">Latitude expressed in radians.</param>
            <param name="longitude">Longitude expressed in radians.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.#ctor(Microsoft.MapPoint.CoordinateSystems.Coordinate2D)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLon"/> 
            structure.
            </summary>
            <param name="coordinate">A lat/long coordinate, where X = longitude (degrees) and Y = latitude (degrees).</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.#ctor(Microsoft.MapPoint.CoordinateSystems.Coordinate3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLon"/> 
            structure.
            </summary>
            <param name="coordinate">A lat/long/alt coordinate, where X = longitude (degrees), Y = latitude (degrees).  Z is ignored.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLon"/> 
            structure.
            </summary>
            <param name="latitude">Latitude expressed in radians.</param>
            <param name="longitude">Longitude expressed in radians.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.GreatCircleDistance(Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Calculates the great circle distance between two points.  Uses a spherical model
            for convenience, so will be slightly inaccurate for ellipsoidal datums.
            </summary>
            <param name="a">The first point.</param>
            <param name="b">The second point.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.GreatCircleDistance(Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Calculates the great circle distance between this point and another.  Uses a spherical model
            for convenience, so will be slightly inaccurate for ellipsoidal datums.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.Equals(Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Compares this struct to another of the same type.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.op_Equality(Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Equality operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.op_Inequality(Microsoft.MapPoint.Rendering3D.LatLon,Microsoft.MapPoint.Rendering3D.LatLon)">
            <summary>
            Inequality operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.Equals(System.Object)">
            <summary>
            Overrides <see cref="M:System.Object.Equals(System.Object)"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.GetHashCode">
            <summary>
            Get a hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.ToString">
            <summary>
            ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.GetCoordinate2D">
            <summary>
            Returns the position in latitude/longitude degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.GetCoordinate3D">
            <summary>
            Returns the position in latitude/longitude degrees, with Z = 0.0.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.GetVector">
            <summary>
            Returns the position in global coordinates using the WGS84 ellipsoid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.GetVector(Microsoft.MapPoint.CoordinateSystems.IDatum)">
            <summary>
            Returns the position in global coordinates using the specified datum.
            </summary>
            <param name="datum">The datum to use.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLon.GetVector(Microsoft.MapPoint.CoordinateSystems.IDatum,System.Double)">
            <summary>
            Returns the position in global coordinates using the specified datum.
            </summary>
            <param name="datum">The datum to use.</param>
            <param name="altitude">An altitude to use.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLon.Latitude">
            <summary>
            Gets or sets the latitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLon.Longitude">
            <summary>
            Gets or sets the longitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLon.LatitudeDegrees">
            <summary>
            Gets or sets the latitude in degrees.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLon.LongitudeDegrees">
            <summary>
            Gets or sets the longitude in degrees.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometry">
            <summary>
            A piece of geometry added to the world via the GeometryManager.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometry.#ctor(System.String,System.String,System.Object)">
            <summary>
            Ctor.
            </summary>
            <param name="layerId"></param>
            <param name="id"></param>
            <param name="tag"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometry.#ctor(System.String,System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="layerId"></param>
            <param name="id"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometry.GetHashCode">
            <summary>
            Hashcode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometry.ToString">
            <summary>
            String representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometry.Layer">
            <summary>
            The layer this geometry belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometry.LayerId">
            <summary>
            The id of the layer this geometry belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometry.Id">
            <summary>
            The id of the geometry within its layer.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.WorldGeometry.Tag">
            <summary>
            Gets or sets data associated with this WorldGeometry.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PushpinGeometry">
            <summary>
            A world geometry representing a pushpin, for use with the GeometryManager.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PushpinGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Rendering3D.LatLonAlt,Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo)">
            <summary>
            Constructs a new pushpin.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the pushpin within its layer.</param>
            <param name="tag">Tag data</param>
            <param name="point">The anchor location of the pushpin.</param>
            <param name="style">Styling information for the pushpin.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PushpinGeometry.#ctor(System.String,System.String,Microsoft.MapPoint.Rendering3D.LatLonAlt,Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo)">
            <summary>
            Constructs a new pushpin.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the pushpin within its layer.</param>
            <param name="point">The anchor location of the pushpin.</param>
            <param name="style">Styling information for the pushpin.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PushpinGeometry.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PushpinGeometry.Style">
            <summary>
            Styling information for the pushpin.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PushpinGeometry.Geometry">
            <summary>
            The anchor location of the pushpin.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PushpinGeometry.CurrentAltitude">
            <summary>
            The altitude of the pin in meters above the WGS84 Datum.  Takes into account 
            AltitudeMode settings.  Depending on AltitudeMode this value may change.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.LabelGeometry">
            <summary>
            A world geometry representing a text label, for use with the GeometryManager.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.LabelGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Rendering3D.LatLonAlt,Microsoft.MapPoint.Rendering3D.Utility.LabelInfo)">
            <summary>
            Constructs a new label.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the label within its layer.</param>
            <param name="tag">Tag data</param>
            <param name="point">The anchor location of the label.</param>
            <param name="style">Styling information for the label.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.LabelGeometry.#ctor(System.String,System.String,Microsoft.MapPoint.Rendering3D.LatLonAlt,Microsoft.MapPoint.Rendering3D.Utility.LabelInfo)">
            <summary>
            Constructs a new label.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the label within its layer.</param>
            <param name="point">The anchor location of the label.</param>
            <param name="style">Styling information for the label.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.LabelGeometry.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.LabelGeometry.Style">
            <summary>
            Styling information for the label.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.LabelGeometry.Geometry">
            <summary>
            The anchor location of the label.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry">
            <summary>
            A world geometry representing a polygon, for use with the GeometryManager.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Rendering3D.LatLonAlt[],Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.PolygonFormat,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polygon.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polygon within its layer.</param>
            <param name="tag">Tag data</param>
            <param name="polygon">The geometry of this polygon.</param>
            <param name="format">The format of the vertices of this polygon.</param>
            <param name="style">Styling information for the polygon.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Rendering3D.LatLonAlt[],Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polygon.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polygon within its layer.</param>
            <param name="tag">Tag data</param>
            <param name="polygon">The geometry of this polygon.</param>
            <param name="style">Styling information for the polygon.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.#ctor(System.String,System.String,Microsoft.MapPoint.Rendering3D.LatLonAlt[],Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polygon.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polygon within its layer.</param>
            <param name="polygon">The geometry of this polygon.</param>
            <param name="style">Styling information for the polygon.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Geometry.Geometry2.Polygon2,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polygon.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polygon within its layer.</param>
            <param name="tag">A user-defined object that is associated with this geometry.</param>
            <param name="polygon">The geometry of this polygon.</param>
            <param name="style">Styling information for the polygon.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.#ctor(System.String,System.String,Microsoft.MapPoint.Geometry.Geometry2.Polygon2,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polygon.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polygon within its layer.</param>
            <param name="polygon">The geometry of this polygon.</param>
            <param name="style">Styling information for the polygon.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Geometry.Geometry3.Polygon3,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polygon.
            </summary>
            <param name="layerId">The layer this polygon resides in.</param>
            <param name="id">The id of the polygon within its layer.</param>
            <param name="tag">A user-defined object that is associated with this geometry.</param>
            <param name="polygon">The geometry of this polygon.</param>
            <param name="style">Styling information for the polygon.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.#ctor(System.String,System.String,Microsoft.MapPoint.Geometry.Geometry3.Polygon3,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polygon.
            </summary>
            <param name="layerId">The layer this polygon resides in.</param>
            <param name="id">The id of the polygon within its layer.</param>
            <param name="polygon">The geometry of this polygon.</param>
            <param name="style">Styling information for the polygon.</param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.Style">
            <summary>
            Styling information for the polygon.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.Geometry">
            <summary>
            The geometry of the polygon.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.PolygonFormat">
            <summary>
            When providing a list of points, this specifies the format those points should be interpreted as.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.PolygonFormat.TriangleList3D">
            <summary>
            The list is a set of triples, each defining an individual triangle.  Note that extrusion and outlining are
            ignored for triangle lists.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.PolygonFormat.Polygon2D">
            <summary>
            The list is the boundary of a polygon that should be drawn on the ground, ignoring altitude values.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolygonGeometry.PolygonFormat.Polygon3D">
            <summary>
            The list is a boundary of a polygon.  The altitude values will be interpreted according to the PolyInfo parameter.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry">
            <summary>
            A world geometry representing a polyline, for use with the GeometryManager.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Rendering3D.LatLonAlt[],Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.PolylineFormat,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polyline.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polyline within its layer.</param>
            <param name="tag">A user-defined object that is associated with this geometry.</param>
            <param name="line">The geometry of this polyline.</param>
            <param name="format">The format of the vertices of this polyline.</param>
            <param name="style">Styling information for the polyline.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Rendering3D.LatLonAlt[],Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polyline.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polyline within its layer.</param>
            <param name="tag">A user-defined object that is associated with this geometry.</param>
            <param name="line">The geometry of this polyline.</param>
            <param name="style">Styling information for the polyline.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.#ctor(System.String,System.String,Microsoft.MapPoint.Rendering3D.LatLonAlt[],Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polyline.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polyline within its layer.</param>
            <param name="line">The geometry of this polyline.</param>
            <param name="style">Styling information for the polyline.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Geometry.Geometry2.Polyline2,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polyline.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polyline within its layer.</param>
            <param name="tag">A user-defined object that is associated with this geometry.</param>
            <param name="line">The geometry of this polyline.</param>
            <param name="style">Styling information for the polyline.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.#ctor(System.String,System.String,Microsoft.MapPoint.Geometry.Geometry2.Polyline2,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polyline.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polyline within its layer.</param>
            <param name="line">The geometry of this polyline.</param>
            <param name="style">Styling information for the polyline.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.#ctor(System.String,System.String,System.Object,Microsoft.MapPoint.Geometry.Geometry3.Polyline3,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polyline.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polyline within its layer.</param>
            <param name="tag">A user-defined object that is associated with this geometry.</param>
            <param name="line">The geometry of this polyline.</param>
            <param name="style">Styling information for the polyline.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.#ctor(System.String,System.String,Microsoft.MapPoint.Geometry.Geometry3.Polyline3,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Constructs a new polyline.
            </summary>
            <param name="layerId">Layer Id</param>
            <param name="id">The id of the polyline within its layer.</param>
            <param name="line">The geometry of this polyline.</param>
            <param name="style">Styling information for the polyline.</param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.Style">
            <summary>
            Styling information for the polyline.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.Geometry">
            <summary>
            The geometry of this polyline.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.PolylineFormat">
            <summary>
            When providing a list of points, this specifies the format those points should be interpreted as.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.PolylineFormat.LineList2D">
            <summary>
            The points are a list of pairs of points, each defining individual line segments.  The list should be drawn
            on the ground, ignoring altitude values.  Currently unsupported.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.PolylineFormat.LineList3D">
            <summary>
            The points are a list of pairs of points, each defining individual line segments.  Altitude values will be interpreted
            according to the PolyInfo parameter.  Currently only supported for pixel-width lines.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.PolylineFormat.Polyline2D">
            <summary>
            The points are a list of points that define a polyline, also known as a line strip.  The list should be drawn
            on the ground, ignoring altitude values.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolylineGeometry.PolylineFormat.Polyline3D">
            <summary>
            The points are a list of points that define a polyline, also known as a line strip.  Altitude values will be interpreted
            according to the PolyInfo parameter.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.IGeoCommunitiesRemotable">
            <summary>
            This class allows Live Shapes to remotely control the VE3D control.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.IGeoCommunitiesRemotable.Probe">
            <summary>
            A dummy method to call just to see if the connection is still good.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.IGeoCommunitiesRemotable.GetRendering3DState(System.Int32)">
            <summary>
            Get the current Rendering3D state.
            </summary>
            <param name="stateId">StateId of calling application (passed via the instanceId)</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.IGeoCommunitiesRemotable.FlyTo(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fly to a specific location with a specific camera orientation.
            </summary>
            <param name="lat">The camera latitude in degrees.</param>
            <param name="lon">The camera longitude in degrees.</param>
            <param name="altitude">The camera altitude in meters.</param>
            <param name="pitch">The camera pitch in degrees.  -90 is straight down, 0 is towards horizon.</param>
            <param name="direction">The camera direction in degrees.  0 is North and moves counterclockwise.</param>
            <returns>Returns true to indicate that the operation was successful. Returns false if the the plug-in
            host wasn't found, the navigation manager wasn't found, or if FlyTo fails for any other reason.</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.IGeoCommunitiesRemotable.Refresh(System.String,System.String,System.String)">
            <summary>
            Refresh the Virtual Earth 3D display after Live Shapes world data has changed.
            </summary>
            <param name="newCollections">A string representing new collection ids.</param>
            <param name="webAuthPostUrl">The WebAuth post-url associated with the refresh, possibly null</param>
            <param name="webAuthPostData">The WebAuth post-data associated with the refresh, possibly null</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.IGeoCommunitiesRemotable.GetVE3DWinHandle">
            <summary>
            Get the window handle of the VE3D remotable.
            </summary>
            <returns>The window handle of the VE3D remotable</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.IGeoCommunitiesRemotable.GetAuthenticatedUserToken">
            <summary>
            Returns the LiveId authenticated user token or null if it fails to get it.
            </summary>
            <returns>Auto token</returns>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.VERenderMode">
            <summary>
            Virtual Earth 3D render modes.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.VERenderMode.Road">
            <summary>
            Render roads with colored (non-textured) buildings.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.VERenderMode.Aerial">
            <summary>
            Render as aerial with textured buildings.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.VERenderMode.Hybrid">
            <summary>
            Roads overlaid on aerial map with textured buildings. 
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState">
            <summary>
            Represents the state of the VE3D control as needed by Live Shapes.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.cameraLatitude">
            <summary>
            Camera latitude in radians.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.cameraLongitude">
            <summary>
            Camera longitude in radians.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.cameraAltitude">
            <summary>
            Camera altitude in meters.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.roll">
            <summary>
            Camera angle in radians around the Z axis.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.pitch">
            <summary>
            Camera pitch in radians.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.yaw">
            <summary>
            Camera yaw in radians.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.latitude">
            <summary>
            The point-of-interest latitude in radians.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.longitude">
            <summary>
            The point-of-interest longitude in radians.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.altitude">
            <summary>
            The point-of-interest altitude in meters.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.radius">
            <summary>
            The radius of the point of interest, in meters.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.renderMode">
            <summary>
            The render mode: road, aerial, or hybrid.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.activeEntityId">
            <summary>
            The active entity id, if one exists.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.activeCollectionId">
            <summary>
            The active collection id, if one exists.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.copyrightText">
            <summary>
            Copyright text for the current Rendering3DState context
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.MapPoint.Rendering3D.Utility.VERenderMode,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="cameraLatitude">Camera latitude in radians</param>
            <param name="cameraLongitude">Camera longitude in radians</param>
            <param name="cameraAltitude">Camera altitude in meters</param>
            <param name="roll">Camera roll in radians</param>
            <param name="pitch">Camera pitch in radians</param>
            <param name="yaw">Camera yaw in radians</param>
            <param name="latitude">The point-of-interest latitude in radians</param>
            <param name="longitude">The point-of-interest longitude in radians</param>
            <param name="altitude">The point-of-interest altitude in meters</param>
            <param name="radius">The radius of the point of interest in meters</param>
            <param name="renderMode">The render mode: road, aerial, or hybrid</param>
            <param name="activeEntityId">The active entity id, if one exists</param>
            <param name="activeCollectionId">The active collection id, if one exists</param>
            <param name="copyrightText">Copyright text for the current Rendering3DState context</param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.CameraLatitude">
            <summary>
            Get the camera latitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.CameraLongitude">
            <summary>
            Get the camera longitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.CameraAltitude">
            <summary>
            Get or set the camera altitude in meters.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.Roll">
            <summary>
            Get the camera angle in radians around the Z axis.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.Pitch">
            <summary>
            Get the camera pitch in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.Yaw">
            <summary>
            Get the camera yaw in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.Latitude">
            <summary>
            Get the point-of-interest latitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.Longitude">
            <summary>
            Get the point-of-interest longitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.Altitude">
            <summary>
            Get or set the point-of-interest altitude in meters.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.Radius">
            <summary>
            Get the radius of the point of interest, in meters.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.RenderMode">
            <summary>
            Get the render mode: road, aerial, or hybrid.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.ActiveEntityId">
            <summary>
            The active entity id, if one exists.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.ActiveCollectionId">
            <summary>
            The active entity id, if one exists.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.Rendering3DState.CopyrightText">
            <summary>
            Copyright text for the current Rendering3DState context
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData">
            <summary>
            Class to hold the identifiying characteristics and usage parameters of a DataSource
            that feeds data into the Host.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.ExpiresPropertyKeyName">
            <summary>
            If the entity of a primitive passed to the system via a DataSource has a property with this name and of 
            type double, the system will automatically requery that primitive after the specified number of seconds 
            have passed.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.IntersectTagPropertyKeyName">
            <summary>
            If a primitive passed to the system via a DataSource has a property with this name and of type object, 
            the value of the property will be returned as a Tag in the results of calls to WorldEngine.Intersect functions.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.#ctor(System.String,System.String)">
            <summary>
            Internal constructor
            </summary>
            <param name="layerId"></param>
            <param name="id"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.#ctor(System.String,System.String,Microsoft.MapPoint.Data.DataSource,Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage)">
            <summary>
            Public constructor.
            </summary>
            <param name="layerId">The layer that this DataSource belongs to.</param>
            <param name="id">The id of the DataSource within its layer.</param>
            <param name="dataSource">An object that supplies data to the engine.</param>
            <param name="usage">The intended use of the data.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.#ctor(System.String,System.String,System.String,Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage)">
            <summary>
            Public constructor.
            </summary>
            <param name="layerId">The layer that this DataSource belongs to.</param>
            <param name="id">The id of the DataSource within its layer.</param>
            <param name="connectionParameters">Either a path to a content manifest xml file, or a tilesource parameter set.</param>
            <param name="usage">The intended use of the data.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.#ctor(System.String,System.String,Microsoft.MapPoint.Data.DataSource,Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage,System.Int32,System.Double)">
            <summary>
            Public constructor intended for dem, model, or image data usage.
            </summary>
            <param name="layerId">The layer that this DataSource belongs to.</param>
            <param name="id">The id of the DataSource within its layer.</param>
            <param name="dataSource">An object that supplies data to the engine.</param>
            <param name="usage">The intended use of the data.</param>
            <param name="priority">The order in which to draw this data relative to data of the same usage.  Larger values are in front.  Only used for Elevation, Model, and TextureMap data, ignored for other uses.</param>
            <param name="opacity">The opacity of imagery data with 0.0 as transparent and 1.0 as fully opaque.  Only used for TextureMap data, ignored for other uses.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.#ctor(System.String,System.String,System.String,Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage,System.Int32,System.Double)">
            <summary>
            Public constructor intended for dem, model, or image data usage.
            </summary>
            <param name="layerId">The layer that this DataSource belongs to.</param>
            <param name="id">The id of the DataSource within its layer.</param>
            <param name="connectionParameters">Either a path to a content manifest xml file, or a tilesource parameter set.</param>
            <param name="usage">The intended use of the data.</param>
            <param name="priority">The order in which to draw this data relative to data of the same usage.  Larger values are in front.  Only used for Elevation, Model, and TextureMap data, ignored for other uses.</param>
            <param name="opacity">The opacity of imagery data with 0.0 as transparent and 1.0 as fully opaque.  Only used for TextureMap data, ignored for other uses.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.#ctor(System.String,System.String,System.String,Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.GetTilePath,Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage,System.Int32,System.Double)">
            <summary>
            Public constructor intended for dem, model, or image data usage.
            </summary>
            <param name="layerId">The layer that this DataSource belongs to.</param>
            <param name="id">The id of the DataSource within its layer.</param>
            <param name="connectionParameters">Either a path to a content manifest xml file, or a string parameter set.  
            tilesource information will be ignored in favor of pathDelegate, but other information such as bounding boxes
            will be used.</param>
            <param name="pathDelegate">Handler that returns URIs for data based on a required TileId.</param>
            <param name="usage">The intended use of the data.</param>
            <param name="priority">The order in which to draw this data relative to data of the same usage.  Larger values are in front.  Only used for Elevation, Model, and TextureMap data, ignored for other uses.</param>
            <param name="opacity">The opacity of imagery data with 0.0 as transparent and 1.0 as fully opaque.  Only used for TextureMap data, ignored for other uses.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.#ctor(System.String,System.String,Microsoft.MapPoint.Data.DataSource,Microsoft.MapPoint.Rendering3D.Utility.StyleData)">
            <summary>
            Public constructor intended for vector data usage.
            </summary>
            <param name="layerId">The layer that this DataSource belongs to.</param>
            <param name="id">The id of the DataSource within its layer.</param>
            <param name="dataSource">An object that supplies data to the engine.</param>
            <param name="styling">A styling lookup for Vector data.  Ignored for other uses.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.#ctor(System.String,System.String,Microsoft.MapPoint.Data.DataSource,Microsoft.MapPoint.Rendering3D.Utility.ActorBuilder)">
            <summary>
            Public constructor intended for actor data usage.
            </summary>
            <param name="layerId">The layer that this DataSource belongs to.</param>
            <param name="id">The id of the DataSource within its layer.</param>
            <param name="dataSource">An object that supplies data to the engine.</param>
            <param name="builder">A builder object to construct Actors from source data. Ignored for other uses.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.IsDataSourceUnchangedFrom(Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData)">
            <summary>
            Returns true if the settings for this datasource are unchanged
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.SetDataSource(Microsoft.MapPoint.Data.DataSource)">
            <summary>
            Used to resolve connection parameters to a real source.
            </summary>
            <param name="dataSource"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.Equals(System.Object)">
            <summary>
            Checks equality
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.Equals(Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData)">
            <summary>
            Check for equality
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.GetHashCode">
            <summary>
            The hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.ToString">
            <summary>
            The string representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.LayerId">
            <summary>
            The layer this source belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.Id">
            <summary>
            The id for this source.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.Usage">
            <summary>
            How this source is to be used.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.Priority">
            <summary>
            The order in which the source will be used, with larger values displaying first
            (applies only to model, imagery and elevation usage).  Default is 1.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.Opacity">
            <summary>
            The global opacity of the source, with 0.0 as transparent and 1.0 as fully opaque
            (applies only to imagery usage).  Default is 1.0.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.EntityFilter">
            <summary>
            A type filter to use for this source.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.RequestToken">
            <summary>
            Specifies a string that can be attached to outgoing requests from this source.  This property is only used
            by data sources created with connection parameters.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.GetTilePathHandler">
            <summary>
            A function to return paths to tiles.  If non-null, tileSource is ignored.  Only used when connection parameters are supplied rather than a DataSource.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.Style">
            <summary>
            A container for styles to be used by this datasource.  Only applies to vector usage.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.PrimitiveOptions">
            <summary>
            Options to use for queries for this source.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.ActorBuilder">
            <summary>
            Builds actors from source data.  Only applies to actor usage.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.DataSource">
            <summary>
            The datasource this applies to.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.ConnectionParameters">
            <summary>
            The string used to connect to this datasource.  May be null.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.DataSourceLayerData.GetTilePath">
            <summary>
            A function that can be passed along with a datasource that will return a URI path to a tile.
            </summary>
            <param name="tile"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage">
            <summary>
            Describes how the datasource is to be used
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage.Unknown">
            <summary>
            Don't know what the usage is
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage.ElevationMap">
            <summary>
            Indicates the datasource will supply bitmaps
            that are to be used as elevation maps
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage.TextureMap">
            <summary>
            Indicates the DataSource will supply bitmaps
            that should be overlaid on the terrain mesh
            as visible images.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage.Model">
            <summary>
            Indicates the dataSource supplies 3D Models
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage.Vector">
            <summary>
            Indicates that the datasource supplies 2d or 3d vectors.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DataSourceUsage.Actors">
            <summary>
            Indicates that the datasource supplies user-rendered Actors.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.StyleData">
            <summary>
            A class to hold styling data corresponding to buckets.  For use with vector geometry in DataSources.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.StyleData.TryGetPointStyle(System.Int32,Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo@)">
            <summary>
            Get the pushpin style corresponding to a bucket id.
            </summary>
            <param name="bucket"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.StyleData.TryGetPolyStyle(System.Int32,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo@)">
            <summary>
            Get the polygon/line style corresponding to a bucket id.
            </summary>
            <param name="bucket"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.StyleData.Add(System.Int32,Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo)">
            <summary>
            Add a style bucket for pushpins.
            </summary>
            <param name="bucket"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.StyleData.Add(System.Int32,Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Add a style bucket for polygons/lines.
            </summary>
            <param name="bucket"></param>
            <param name="value"></param>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo">
            <summary>
            Information on polygon and polyline style and metadata.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.#ctor(Microsoft.MapPoint.Rendering3D.Utility.PolyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo"/> class from another instance.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Microsoft.MapPoint.Rendering3D.Utility.CapStyle,Microsoft.MapPoint.Rendering3D.Utility.DashStyle,Microsoft.MapPoint.Rendering3D.Utility.LineStyle,Microsoft.MapPoint.Rendering3D.Utility.JoinStyle,System.Double,Microsoft.MapPoint.Rendering3D.Utility.LineWidthUnits,Microsoft.MapPoint.Rendering3D.Utility.AltitudeMode,System.Int32,Microsoft.MapPoint.Rendering3D.Utility.HitDetectMode,System.Byte,System.Byte)">
            <summary>
            Constructor for style format for polygons and polylines.
            </summary>
            <param name="filled">Whether the poly should be filled.</param>
            <param name="outlined">Whether the edges of the poly should be marked.</param>
            <param name="extruded">Whether the edges of the poly should be extruded from the ground.</param>
            <param name="fillColor">Color of the fill, if any.</param>
            <param name="fillHighlightColor">Color of the fill when selected.</param>
            <param name="lineColor">Color of the outline, if any.</param>
            <param name="lineHighlightColor">Color of the outline when selected.</param>
            <param name="capStyle">Style of endcaps for lines.</param>
            <param name="dashStyle">Style of dashing for lines.</param>
            <param name="lineStyle">Style of line drawing.</param>
            <param name="joinStyle">Style of joins between segments of lines.</param>
            <param name="width">Width of lines.</param>
            <param name="widthUnits">Units to use for line width.</param>
            <param name="altitudeMode">The mode altitudes should be interpreted in.</param>
            <param name="zIndex">The order 2D polys should be drawn in.  Higher numbers are on top.</param>
            <param name="hitDetect">Whether the poly should use hit detection.</param>
            <param name="minLOD">The smallest (most zoomed out) level this poly should appear at.</param>
            <param name="maxLOD">The highest (most zoomed in) level this poly should appear at.</param>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.CapStyle">
            <summary>
            Style of endcaps for lines.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.DashStyle">
            <summary>
            Style of dashing for lines.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.LineStyle">
            <summary>
            Style of line drawing.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.JoinStyle">
            <summary>
            Style of joins between segments of lines.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.AltitudeMode">
            <summary>
            The mode altitudes should be interpreted in.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.Filled">
            <summary>
            Whether the poly should be filled.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.Outlined">
            <summary>
            Whether the edges of the poly should be marked.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.Extruded">
            <summary>
            Whether the edges of the poly should be extruded from the ground.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.FillColor">
            <summary>
            Color of the fill, if any.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.FillHighlightColor">
            <summary>
            Color of the fill when selected.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.LineColor">
            <summary>
            Color of the outline, if any.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.LineHighlightColor">
            <summary>
            Color of the outline when selected.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.LineWidth">
            <summary>
            Width of lines.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.LineWidthUnits">
            <summary>
            Units to use for line width.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.ZIndex">
            <summary>
            The order 2D polys should be drawn in.  Higher numbers are on top.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.MinLOD">
            <summary>
            The smallest (most zoomed out) level this poly should appear at.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.MaxLOD">
            <summary>
            The highest (most zoomed in) level this poly should appear at.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.HitDetect">
            <summary>
            Whether the poly should be used for hit detect.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.DefaultPolygon">
            <summary>
            Default values for a polygon.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PolyInfo.DefaultPolyline">
            <summary>
            Default values for a polyline.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo">
            <summary>
            Information on pushpin style and metadata.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.#ctor(Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo"/> class from another instance.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.#ctor(System.Int32,System.Int32,System.Double,System.String,System.String,System.Drawing.FontStyle,System.Single,System.Drawing.Color,Microsoft.MapPoint.CoordinateSystems.Coordinate2D,Microsoft.MapPoint.CoordinateSystems.Coordinate2D,System.Drawing.Color,Microsoft.MapPoint.Geometry.VectorMath.Orientation,System.Boolean,Microsoft.MapPoint.Rendering3D.Utility.PushpinOrientationMode,Microsoft.MapPoint.Rendering3D.Utility.AltitudeMode,Microsoft.MapPoint.Rendering3D.Utility.HitDetectMode,System.String,System.String,System.String,Microsoft.MapPoint.CoordinateSystems.Coordinate2D,System.Drawing.Point,System.Drawing.Size,Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider,Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider,System.Int32,System.Byte,System.Byte)">
            <summary>
            Ctor
            </summary>
            <param name="scale">A scaling factor to make the pushpin larger or smaller.  1.0 is default size.</param>
            <param name="label">Text to draw on top of the image.</param>
            <param name="fontName">the font to be used to render the label.</param>
            <param name="fontStyle">the font style to be used to render the label.</param>
            <param name="fontSize">the font size to be used to render the label, or -1 to automatically adjust the font size.</param>
            <param name="fontColor">the font color.</param>
            <param name="labelOffset">The label offset, in pixel coordinates, relative to the top left of the pushpin. If -1, LabelOffsetPercent is used instead.</param>
            <param name="labelOffsetPercent">The label offset, in percent of the image width and height [0-100], relative to the top left of the pushpin.</param>
            <param name="backColor">The color to tint the image (if the primary resource is null or invalid)</param>
            <param name="altitudeMode">The mode altitude should be interpreted in.</param>
            <param name="imageWidth">Width of icon, or -1 to match resource.</param>
            <param name="imageHeight">Height of icon, or -1 to match resource.</param>
            <param name="orientation">The local orientation of the pushpin.  If null, values will be taken from the camera.</param>
            <param name="orientationMode">How to interpret the orientation property.</param>
            <param name="maintainScreenSize">Scale sprite with camera distance to maintain screen size.</param>
            <param name="hitDetect">Whether this pushpin should highlight on mouseover.</param>
            <param name="resource">Url of the primary resource to display.  If image is non-null, this is ignored.</param>
            <param name="resource2">Url of a resource that is blended with the main resource when the pushpin is built.</param>
            <param name="highlightResource">Url of the resource to display on mouseover.  If highlightImage is non-null, this is ignored.</param>
            <param name="resource2Size">The height and width of the blended resource, -1 to use the image's size.</param>
            <param name="resource2Offset">Offset from the top left of the main resource to place the blended resource.</param>
            <param name="imageOffset">The image offset relative to the anchor point.</param>
            <param name="image">The primary resource to display.  If non-null, resource is ignored.</param>
            <param name="highlightImage">The resource to display on mouseover.  If non-null, highlightResource is ignored.</param>
            <param name="zIndex">The order pushpins should be drawn in.  Higher numbers on top.  Only used when pushpins are very close to one another.</param>
            <param name="minLOD">The smallest (most zoomed out) level this poly should appear at.</param>
            <param name="maxLOD">The highest (most zoomed in) level this poly should appear at.</param>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.Resource">
            <summary>
            Url of the primary resource to display.  If image is non-null, this is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.Resource2">
            <summary>
            Url of a resource that is blended with the main resource when the pushpin is built.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.HighlightResource">
            <summary>
            Url of the resource to display on mouseover.  If highlightImage is non-null, this is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.Image">
            <summary>
            The primary resource to display.  If non-null, resource is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.HighlightImage">
            <summary>
            The resource to display on mouseover.  If non-null, highlightResource is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.MaintainScreenSize">
            <summary>
            Scale sprite with camera distance to maintain screen size.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.OrientationMode">
            <summary>
            How to interpret the Orientation property.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.ImageWidth">
            <summary>
            Width of icon, or -1 to match resource.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.ImageHeight">
            <summary>
            Height of icon, or -1 to match resource.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.Scale">
            <summary>
            A scaling factor to make the pushpin larger or smaller.  1.0 is default size.  This affects width and height equally.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.Label">
            <summary>
            Text to draw on top of the image.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.FontStyle">
            <summary>
            The font style used to render the label. FontStyle.Bold is the default style.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.FontName">
            <summary>
            The font used to render the label. Verdana is the default font.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.FontSize">
            <summary>
            The font size used to render the label. -1 is the default size, which means it scales depending on the size of the pin and how much text must be displayed.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.FontColor">
            <summary>
            The font color used to render the label. White is the default color.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.LabelOffset">
            <summary>
            The label offset, in pixel coordinates, relative to the top left of the pushpin. If -1, LabelOffsetPercent is used instead.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.LabelOffsetPercent">
            <summary>
            The label offset, in percent of the image width and height [0-100], relative to the top left of the pushpin.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.BackColor">
            <summary>
            Color to paint the pushpin. Ignored if a valid Resource is provided.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.ImageOffset">
            <summary>
            The image offset relative to the anchor point.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.Resource2Offset">
            <summary>
            The offset of the upper left corner of the second resource from the upper left of the first.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.Resource2Size">
            <summary>
            The width and height of the second resource in pixels.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.Orientation">
            <summary>
            The local orientation of the pushpin.  If null, values will be taken from the camera.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.AltitudeMode">
            <summary>
            The mode altitude should be interpreted in.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.ZIndex">
            <summary>
            The order pushpins should be drawn in.  Higher numbers on top.  Only used when pushpins are very close to one another.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.MinLOD">
            <summary>
            The smallest (most zoomed out) level this poly should appear at.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.MaxLOD">
            <summary>
            The highest (most zoomed in) level this poly should appear at.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.HitDetect">
            <summary>
            Whether the pushpin should highlight on mouseover.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.ZBufferEnabled">
            <summary>
            Gets or sets whether the ZBuffer is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.FadeInAndOut">
            <summary>
            If true, the pin will fade on creation and deletion, rather than change immediately.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.PushpinInfo.Default">
            <summary>
            Default values for pushpin style.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo">
            <summary>
            Information on label style and metadata.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.#ctor(Microsoft.MapPoint.Rendering3D.Utility.LabelInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo"/> class from another instance.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.#ctor(System.String,System.String,System.Drawing.FontStyle,System.Single,System.Drawing.Color,System.Drawing.Color,System.Int32,Microsoft.MapPoint.CoordinateSystems.Coordinate2D,Microsoft.MapPoint.Rendering3D.Utility.AltitudeMode,System.Drawing.StringAlignment,System.Drawing.StringAlignment,Microsoft.MapPoint.Rendering3D.Utility.HitDetectMode,System.Boolean,System.Int32,System.Byte,System.Byte)">
            <summary>
            Ctor
            </summary>
            <param name="label">Text of the label.</param>
            <param name="fontName">The font to be used to render the label.</param>
            <param name="fontStyle">The font style to be used to render the label.</param>
            <param name="fontSize">The font size to be used to render the label in points.</param>
            <param name="fontColor">The font color.</param>
            <param name="glowColor">The color used to render the font glow. Black is the default color.</param>
            <param name="glowSize">The size in pixels of a color glow around the text. Zero (no glow) is the default.</param>
            <param name="labelOffset">The label offset, in pixel coordinates, relative to the anchor.</param>
            <param name="altitudeMode">The mode altitude should be interpreted in.</param>
            <param name="horizontalAlignment">The alignment of the text relative to its anchor.</param>
            <param name="verticalAlignment">The alignment of the text relative to its anchor.</param>
            <param name="hitDetect">Whether this label should be hit detectable.  Highlight mode is not used.</param>
            <param name="fadeInAndOut">If true, the pin will fade on creation and deletion, rather than change immediately.</param>
            <param name="zIndex">The order pushpins should be drawn in.  Higher numbers on top.</param>
            <param name="minLOD">The smallest (most zoomed out) level this label should appear at.</param>
            <param name="maxLOD">The highest (most zoomed in) level this label should appear at.</param>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.Label">
            <summary>
            Text to draw on top of the image.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.FontStyle">
            <summary>
            The font style used to render the label. FontStyle.Bold is the default style.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.FontName">
            <summary>
            The font used to render the label. Verdana is the default font.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.FontSize">
            <summary>
            The font size used to render the label in points.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.FontColor">
            <summary>
            The font color used to render the label. White is the default color.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.GlowColor">
            <summary>
            The color used to render the font glow. Black is the default color.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.GlowSize">
            <summary>
            The size in pixels of a color glow around the text. Zero (no glow) is the default.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.LabelOffset">
            <summary>
            The label offset, in pixel coordinates, relative to the anchor.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.AltitudeMode">
            <summary>
            The mode altitude should be interpreted in.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.ZIndex">
            <summary>
            The order pushpins should be drawn in.  Higher numbers on top.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.MinLOD">
            <summary>
            The smallest (most zoomed out) level this label should appear at.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.MaxLOD">
            <summary>
            The highest (most zoomed in) level this label should appear at.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.HitDetect">
            <summary>
            Whether the label should be hit detectable.  Highlight mode is not used.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.HorizontalAlignment">
            <summary>
            The alignment of the text relative to its anchor.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.VerticalAlignment">
            <summary>
            The alignment of the text relative to its anchor.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.FadeInAndOut">
            <summary>
            If true, the label will fade on creation and deletion, rather than change immediately.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.LabelInfo.Default">
            <summary>
            Default values for label style.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.LineWidthUnits">
            <summary>
            Units to use for line width.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LineWidthUnits.Pixels">
            <summary>
            Screen pixels.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LineWidthUnits.Meters">
            <summary>
            World meters.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.AltitudeMode">
            <summary>
            The mode altitude should be interpreted in.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.AltitudeMode.FromGround">
            <summary>
            Measure altitude from the ground at the current location.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.AltitudeMode.FromDatum">
            <summary>
            Measure altitude from the datum.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.DashStyle">
            <summary>
            The style to use for drawing dashed lines.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.Solid">
            <summary>
            No dashing.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.ShortDash">
            <summary>
            Short dashes.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.ShortDot">
            <summary>
            Short Dots.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.ShortDashDot">
            <summary>
            Short alternating dashes and dots.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.ShortDashDotDot">
            <summary>
            Short dash followed by two dots.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.Dot">
            <summary>
            Dotted line.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.Dash">
            <summary>
            Medium sized dashes.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.DashDot">
            <summary>
            Medium alternating dashes and dots.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.LongDash">
            <summary>
            Long dashes.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.LongDashDot">
            <summary>
            Long alternating dashes and dots.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.DashStyle.LongDashDotDot">
            <summary>
            Long dash followed by two dots.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.HitDetectMode">
            <summary>
            The mode in which hit detection works for this geometry.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.HitDetectMode.None">
            <summary>
            The geometry does not respond to intersection or hit detect.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.HitDetectMode.On">
            <summary>
            The geometry will respond to intersection.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.HitDetectMode.HighlightOnPointer">
            <summary>
            The geometry will respond to hit detect, and in addition will use its highlight styling
            values when the pointer is over it.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.LineStyle">
            <summary>
            The style to draw the lines in.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LineStyle.Single">
            <summary>
            A single line.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LineStyle.ThinThin">
            <summary>
            Parallel thin lines.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LineStyle.ThickThin">
            <summary>
            Parallel thick and thin lines.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LineStyle.ThinThick">
            <summary>
            Parallel thin and thick lines.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.LineStyle.ThickBetweenThin">
            <summary>
            A thick line with two parallel thin lines.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.JoinStyle">
            <summary>
            The style to join together two segments in a polyline.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.JoinStyle.Round">
            <summary>
            A rounded join between segments.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.JoinStyle.Miter">
            <summary>
            A sharp join between segments.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.JoinStyle.Bevel">
            <summary>
            A flat join between segments.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.CapStyle">
            <summary>
            The style of drawing the ends of a polyline.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.CapStyle.None">
            <summary>
            Flat ends.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.CapStyle.Round">
            <summary>
            Rounded ends.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.PushpinOrientationMode">
            <summary>
            How to interpret the Orientation property of PushpinInfo.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinOrientationMode.CameraUpFaceCamera">
            <summary>
            Orient up with the camera and always face the camera.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinOrientationMode.FaceCamera">
            <summary>
            Use supplied up orientation, but always face the camera.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinOrientationMode.CameraUpCameraLookAt">
            <summary>
            Orient up with the camera and face parallel with the camera.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinOrientationMode.CameraLookAt">
            <summary>
            Use supplied up orientation and face parallel with the camera.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinOrientationMode.CameraUp">
            <summary>
            Orient up with the camera and use supplied facing (LookAt) orientation.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinOrientationMode.UseProvided">
            <summary>
            Use supplied up orientation and facing (LookAt) orientation.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.Utility.PushpinOrientationMode.UseProvidedGlobal">
            <summary>
            Use supplied orientation as a global orientation.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider">
            <summary>
            Provides images, and reports when new ones are available.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider.OperationCompleted">
            <summary>
            This function is called when the caller has finished reading the current image.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider.OnImageUpdated">
            <summary>
            This function may be called to notify when a new image is available.  Derived classes should
            also set <see cref="P:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider.NewImageAvailable"/> to true.
            </summary>
        </member>
        <member name="E:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider.ImageUpdated">
            <summary>
            The event is raised when a BitmapProvider has a new image available.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider.ImageSize">
            <summary>
            The size of the images provided.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider.CurrentImage">
            <summary>
            The current image this object can provide.  The caller will not take ownership.
            In derived classes this property must remain valid between the time that NewImageAvailable 
            becomes true and OperationCompleted is called.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider.NewImageAvailable">
            <summary>
            Whether the current image is different from a previous one.  From the time that this property
            becomes true, derived classes should keep it true until OperationCompleted is called.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider.HasFrequentUpdates">
            <summary>
            If true, indicates NewImageAvailable should be polled more frequently, if the caller is using
            polling.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.BitmapProvider.NewImageAvailableHandler">
            <summary>
            Handles when a new image is available.
            </summary>
            <param name="source">The provider that has a new image.</param>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Utility.SingleBitmapProvider">
            <summary>
            A wrapper around a single image.  Handles standard images and animated GIF.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.SingleBitmapProvider.#ctor(System.Drawing.Bitmap)">
            <summary>
            Ctor
            </summary>
            <param name="image">The image to be provided.  Does not take ownership.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.SingleBitmapProvider.SetBitmap(System.Drawing.Bitmap)">
            <summary>
            Resets the bitmap on this provider.
            </summary>
            <param name="image">The new image to be provided.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Utility.SingleBitmapProvider.GetAnimationInfo(System.Drawing.Bitmap)">
            <summary>
            Try to extract animation info out of the image.  If none is found, return null.
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.SingleBitmapProvider.ImageSize">
            <summary>
            The size of the images provided.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.SingleBitmapProvider.CurrentImage">
            <summary>
            The current image this object can provide.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.SingleBitmapProvider.HasFrequentUpdates">
            <summary>
            Returns true if the image is an animated GIF and it has more frames to display.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Utility.SingleBitmapProvider.NewImageAvailable">
            <summary>
            Whether the current image is different from a previous one.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Scene.SceneState">
            <summary>
            Encapsulates metadata describing a scene.  This data is built up over 
            the process of building the scene.  To create a scene state, call
            SceneStateManager.CreateSceneState().
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.SceneState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Scene.SceneState"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.SceneState.GetData``1">
            <summary>
            Gets data of the required type from the scene state.  Throws if not present.
            </summary>
            <typeparam name="DataType"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.SceneState.TryGetData``1(``0@)">
            <summary>
            Gets data of the required type from the scene state.
            </summary>
            <typeparam name="DataType"></typeparam>
            <param name="value">The returned value.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.SceneState.AddData(System.Object)">
            <summary>
            Submit data associated with a specific key.
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Scene.Step">
            <summary>
            Encapsulates a step that can be added to a step manager and executed in order.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.#ctor(Microsoft.MapPoint.Rendering3D.Scene.StepManager)">
            <summary>
            Initializes a new instance of the Step type.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.Finalize">
            <summary>
            Finalizer.  Implemented because steps may support disposing.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.OnInitialize(Microsoft.MapPoint.Utility.Progress)">
            <summary>
            Called when the step should initialize itself.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.OnRestore">
            <summary>
            Called when the step should restore its resources.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.OnViewMove(System.Int32,System.Int32)">
            <summary>
            Called when the step's view moves on the screen.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.OnViewResize(System.Int32,System.Int32)">
            <summary>
            Called when the step should resize.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.OnExecute(Microsoft.MapPoint.Rendering3D.Scene.SceneState)">
            <summary>
            Called when the step should execute.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.Intersects(Microsoft.MapPoint.Geometry.VectorMath.Ray3DIntersectionList)">
            <summary>
            Derived steps may override this method to perform ray intersection 
            testing.
            </summary>
            <param name="intersections">List of intersections to append to with
            new intersections.</param>
            <returns>True if any intersections occurred.</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.Intersects(Microsoft.MapPoint.Geometry.VectorMath.SweptSphereD,Microsoft.MapPoint.Geometry.VectorMath.SweptSphereDIntersectionList)">
            <summary>
            Derived steps may override this method to perform swept-sphere intersection testing.
            </summary>
            <param name="sweptSphere"></param>
            <param name="intersections"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.Dispose(System.Boolean)">
            <summary>
            Derived classes may override this if they have members that need to be disposed.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.ReleaseRenderObjects">
            <summary>
            Derived classes should overrided this if they have any graphical resources that need to
            be released before the render thread shuts down.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.Step.Dispose">
            <summary>
            Implementation of IDisposable.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Scene.Step.Manager">
            <summary>
            Gets the manager that owns this plug in.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Scene.Step.StepEnabled">
            <summary>
            Whether the step should execute.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Scene.StepManager">
            <summary>
            Manages a tree of plug-ins, starting at the root node.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.#ctor">
            <summary>
            Initializes a new instance of the StepManager class.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.CleanupSteps">
            <summary>
            Called from the shutdown of the render thread.  Makes calls into each loaded step to allow it to release
            graphics resources on the primary thread.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.InsertBefore(System.Type,Microsoft.MapPoint.Rendering3D.Scene.Step)">
            <summary>
            Inserts the specified step before the step with the specified type.
            If no step is found with the specified type, the step is inserted 
            at the end.
            </summary>
            <param name="type"></param>
            <param name="newStep"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.InsertBefore(Microsoft.MapPoint.Rendering3D.Scene.Step,Microsoft.MapPoint.Rendering3D.Scene.Step)">
            <summary>
            Inserts the specified step before the step with the specified type.
            If no step is found with the specified type, the step is inserted 
            at the end.
            </summary>
            <param name="step">The step to insert before.</param>
            <param name="newStep">The step to insert.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.ReplaceStep(System.Type,Microsoft.MapPoint.Rendering3D.Scene.Step)">
            <summary>
            Inserts a new step at the position of the step of the specified type, removing that
            step from the manager and returning it.
            </summary>
            <param name="type">The type of the step to replace.</param>
            <param name="newStep">The step to replace with.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.Add(Microsoft.MapPoint.Rendering3D.Scene.Step)">
            <summary>
            Adds a step to the list.
            </summary>
            <param name="step"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.Remove(Microsoft.MapPoint.Rendering3D.Scene.Step)">
            <summary>
            Searches through the list for a step, disposes, and removes it.
            </summary>
            <param name="step"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.OnInitialize(Microsoft.MapPoint.Utility.Progress)">
            <summary>
            Called when the plug-ins should be initialized.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.OnRestore">
            <summary>
            Called when each step should be restored.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.OnViewMove(System.Int32,System.Int32)">
            <summary>
            Called when the view had changed locations and steps need to be notified.
            </summary>
            <param name="x">Horizontal position on the screen, in pixels, of the view.</param>
            <param name="y">Vertical position on the screen, in pixels, of the view.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.OnViewResize(System.Int32,System.Int32)">
            <summary>
            Called when each step should resize.
            </summary>
            <param name="width">Width, in pixels, of the view.</param>
            <param name="height">Height, in pixels, of the view.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.OnExecute(Microsoft.MapPoint.Rendering3D.Scene.SceneState)">
            <summary>
            Called when each step should be executed.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.Clear">
            <summary>
            Disposes of, and removes all steps from the list.
            WARNING: This should not be called from a step.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.Contains(Microsoft.MapPoint.Rendering3D.Scene.Step)">
            <summary>
            Returns true if the manager contains the specified step.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.CopyTo(Microsoft.MapPoint.Rendering3D.Scene.Step[],System.Int32)">
            <summary>
            Not supported.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.Intersects(Microsoft.MapPoint.Geometry.VectorMath.Ray3DIntersectionList)">
            <summary>
            Performs intersection testing on all of the steps.
            </summary>
            <param name="intersections"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.Intersects(Microsoft.MapPoint.Geometry.VectorMath.SweptSphereD,Microsoft.MapPoint.Geometry.VectorMath.SweptSphereDIntersectionList)">
            <summary>
            Performs intersection testing on all of the steps.
            </summary>
            <param name="sweptSphere"></param>
            <param name="intersections"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.ToString">
            <summary>
            Gets a user readable respresentation of the step manager.  This lists all of the steps contained therein.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Scene.StepManager.Dispose">
            <summary>
            Implements <see cref="M:System.IDisposable.Dispose"/>.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Scene.StepManager.Count">
            <summary>
            Gets the number of steps.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Scene.StepManager.IsReadOnly">
            <summary>
            This collection is not read-only, so this returns false.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.State.CameraData">
            <summary>
            Encapsulates any state that is required from scene to scene.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.State.CameraData.#ctor(Microsoft.MapPoint.Rendering3D.State.ViewSnapshot,Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot,Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot,Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera,System.Double,Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot,Microsoft.MapPoint.Rendering3D.Cameras.CameraController{Microsoft.MapPoint.Rendering3D.Cameras.PredictiveCamera})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.State.CameraData"/> class.
            </summary>
            <param name="camera">The camera object itself.</param>
            <param name="cameraController">The controller that created this camera.</param>
            <param name="cameraMetersAboveGround">The number of meters that the camera is currently above the ground.</param>
            <param name="cameraSnapshot">A snapshot created from the camera.</param>
            <param name="centerGroundPosition">The position of the ground at the center of the screen.  May be null if unknown.</param>
            <param name="view">The current view state.</param>
            <param name="previousCamera">The previous frame's camera.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.State.CameraData.GlobalToScreen(Microsoft.MapPoint.Geometry.VectorMath.Vector3D)">
            <summary>
            Converts a 3D point in global space to the screen.
            </summary>
            <param name="globalPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.State.CameraData.ScreenToGlobal(System.Drawing.Point)">
            <summary>
            Converts a point on the screen to a point in 3D global space.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.State.CameraData.ScreenToGlobalRay(System.Drawing.Point)">
            <summary>
            Get a ray whose origin is the point on the screen in global coordinates, and points away from the screen
            into the world.  This is usually what you will use if you want to intersect with items at the pointer.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.State.CameraData.IsPredictedCameraMoving(Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot,Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot,System.Double)">
            <summary>
            Determines if the predicted camera is different from the current, and whether we should request less detail.
            </summary>
            <param name="predictedCamera"></param>
            <param name="currentCamera"></param>
            <param name="cameraElevationAboveGround"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.CameraData.View">
            <summary>
            Gets the view used with the camera.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.CameraData.DistanceToScreenInPixels">
            <summary>
            Gets the distance from the camera to the screen in pixels.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.CameraData.MetersAboveGround">
            <summary>
            Gets the distance from the camera to the ground.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.CameraData.Snapshot">
            <summary>
            Gets the camera snapshot that this scene will use.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.CameraData.PredictedSnapshot">
            <summary>
            Gets the predicted camera snapshot that this scene will use.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.CameraData.CenterGroundPosition">
            <summary>
            Gets the position of the center of the screen on the ground.  May be null, for example if the center
            of the screen is not on the ground.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.CameraData.CurrentCameraController">
            <summary>
            Gets the camera controller that this scene will use.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.CameraData.Movement">
            <summary>
            Gets the camera movement that this scene will use.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.State.CameraMovementType">
            <summary>
            The manner in which the camera is moving, if at all.  The system may use this as a hint for data loading.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.State.CameraMovementType.Unspecified">
            <summary>
            Not specified.  The system will attempt to automatically determine the movement type.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.State.CameraMovementType.Moving">
            <summary>
            The camera is moving.  Less detailed data will be loaded.  If more specific knowledge is available it may be provided by using MostlyBackwards, MostlyVertical, or MovingSlowly.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.State.CameraMovementType.MostlyBackwards">
            <summary>
            Mostly moving backwards, away from object in the current view.  Optimizes data loading for this behavior.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.State.CameraMovementType.MostlyVertical">
            <summary>
            Mostly moving away from or towards the ground.  Optimizes data loading for this behavior.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.State.CameraMovementType.MovingSlowly">
            <summary>
            Movement in any manner, but done slowly.  Loads more detail than when Moving.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.State.CameraMovementType.None">
            <summary>
            Stationary camera.  Full detail is loaded, however, specifying this when the camera is in fact moving will result in a degraded experience.  If greater detail is desired during movement, use MovingSlowly.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.State.ViewSnapshot">
            <summary>
            Encapsulates a view area in pixels.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.State.ViewSnapshot.#ctor(System.Drawing.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.State.ViewSnapshot"/> class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.ViewSnapshot.Size">
            <summary>
            Gets the dimensions of the view in pixels.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.ViewSnapshot.AspectRatio">
            <summary>
            Gets the aspect ratio of the view.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.ViewSnapshot.IsValid">
            <summary>
            Gets whether or not this view is valid (its dimensions are greater than 0).
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.State.TimeSnapshot">
            <summary>
            Encapsulates frame time related tracking.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.State.TimeSnapshot.#ctor(System.Int64,System.Int64,System.Int64,System.Single)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.State.TimeSnapshot"/> class.
            </summary>
            <param name="tickCount">The tick count to snapshot.</param>
            <param name="eventTickCount">The actual tick count when the snapshot occurred.</param>
            <param name="previousTickCount"></param>
            <param name="framesPerSecond"></param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.TimeSnapshot.TickCount">
            <summary>
            Gets the tick count for this frame.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.TimeSnapshot.EventTickCount">
            <summary>
            Gets the actual tick count rather than the one that was explicitly specified.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.TimeSnapshot.TotalSeconds">
            <summary>
            Gets the number of elapsed seconds since the start of the application.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.TimeSnapshot.TickCountDelta">
            <summary>
            Gets the number of ticks since the previous frame.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.TimeSnapshot.SecondsDelta">
            <summary>
            Gets the number of seconds since the previous frame.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.State.TimeSnapshot.FramesPerSecond">
            <summary>
            Gets the approximate number of frames per second that the rendering is running at.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot">
            <summary>
            Encapsulates a read-only snapshot of a GeodeticCamera.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.#ctor(Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCamera)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot"/> structure.
            </summary>
            <param name="camera"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.#ctor(System.Int32,System.Double,System.Double,System.Double,System.Double,Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot"/> structure.
            This ctor is primarily intended for testing.
            </summary>
            <param name="id"></param>
            <param name="fieldOfViewY"></param>
            <param name="aspectRatio"></param>
            <param name="nearClipPlane"></param>
            <param name="farClipPlane"></param>
            <param name="viewpoint"></param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.UniqueId">
            <summary>
            Gets the unique id for this snapshot.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.FieldOfViewY">
            <summary>
            Gets the field of view angle in radians for the vertical dimension of the view.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.AspectRatio">
            <summary>
            Gets the aspect ratio of the width divided by the height.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.NearClipPlane">
            <summary>
            Gets the distance to the near clip-plane from the camera.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.FarClipPlane">
            <summary>
            Gets the distance from the far clip-plane from the camera.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.Position">
            <summary>
            Gets the geodetic position of this snapshot.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.Orientation">
            <summary>
            Gets the global orientation of this snapshot.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.LocalOrientation">
            <summary>
            Gets the local orientation of this snapshot at the position.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.ProjectionMatrix">
            <summary>
            Gets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.ViewMatrix">
            <summary>
            Gets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.TransformMatrix">
            <summary>
            Gets the transform matrix (view matrix * projection matrix).
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticCameraSnapshot.InverseTransformMatrix">
            <summary>
            Gets the inverse of the transform matrix.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition">
            <summary>
            Encapsulates a geodetic position.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.NeedLatLonAlt">
            <summary>
            Calculates the LatLonAlt value if it hasn't been.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.OnLatLonAltChanging">
            <summary>
            Called internally when LatLonAlt changes.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.OnLatLonAltChanged">
            <summary>
            Indicates the LatLonAlt has changed.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.NeedVector">
            <summary>
            Recalculate the vector 
            position if necessary.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.OnVectorChanging">
            <summary>
            Called internally right before the vector changes.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.OnVectorChanged">
            <summary>
            Called internally right after the vector changes.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition"/> 
            class using the default datum.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.#ctor(Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition"/>
            class from another position.
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.#ctor(Microsoft.MapPoint.CoordinateSystems.IDatum)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition"/>
            class using the specified datum.
            </summary>
            <param name="datum"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.#ctor(Microsoft.MapPoint.Rendering3D.LatLonAlt)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition"/> 
            class from a Latitude, Longitude, Altitude, using the default 
            datum.
            </summary>
            <param name="lla">The location to create.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.#ctor(Microsoft.MapPoint.CoordinateSystems.IDatum,Microsoft.MapPoint.Rendering3D.LatLonAlt)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition"/> 
            class from a Latitude, Longitude, Altitude, using the specified 
            datum.
            </summary>
            <param name="datum"></param>
            <param name="lla">The location to create.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.#ctor(Microsoft.MapPoint.Geometry.VectorMath.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition"/> 
            class from a global coordinate, using the default datum.
            </summary>
            <param name="vector"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.#ctor(Microsoft.MapPoint.CoordinateSystems.IDatum,Microsoft.MapPoint.Geometry.VectorMath.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition"/> 
            class from a global coordinate, using the specified datum.
            </summary>
            <param name="datum">The datum this vector applies to.</param>
            <param name="vector"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.#ctor(Microsoft.MapPoint.CoordinateSystems.IDatum,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition"/> 
            class from a global coordinate, using the specified datum.
            </summary>
            <param name="datum"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="fromGlobal"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.#ctor(Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition"/> 
            from a snapshot.
            </summary>
            <param name="snapshot"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.SilentCopy(Microsoft.MapPoint.Geometry.VectorMath.Position)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.SilentCopy(Microsoft.MapPoint.Geometry.VectorMath.PositionSnapshot)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.GetHashCode">
            <summary>
            Overrides <see cref="M:System.Object.GetHashCode"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.Datum">
            <summary>
            Gets the datum.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.Location">
            <summary>
            Gets or sets the lat/lon/alt.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.Latitude">
            <summary>
            Gets or sets the latitude.  This is a shortcut to Location.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.Longitude">
            <summary>
            Gets or sets the longitude.  This is a shortcut to Location.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition.Altitude">
            <summary>
            Gets or sets the altitude.  This is a shortcut to Location.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot">
            <summary>
            Read-only snapshot of a position.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot.#ctor(Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Geometry.VectorMath.PositionSnapshot"/> 
            class.
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot.#ctor(Microsoft.MapPoint.Rendering3D.LatLonAlt)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Geometry.VectorMath.PositionSnapshot"/> 
            class.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot.#ctor(Microsoft.MapPoint.Geometry.VectorMath.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Geometry.VectorMath.PositionSnapshot"/> 
            class.
            </summary>
            <param name="vector"></param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot.Datum">
            <summary>
            Gets the datum.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot.Location">
            <summary>
            Gets the location.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot.Latitude">
            <summary>
            Gets the latitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot.Longitude">
            <summary>
            Gets the longitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPositionSnapshot.Altitude">
            <summary>
            Gets the altitude in meters.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint">
            <summary>
            Encapsulates a viewpoint that exists in a geodetic space.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint"/>
            class with default values.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.#ctor(Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint"/>
            class from another viewpoint.
            </summary>
            <param name="viewpoint"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.#ctor(Microsoft.MapPoint.Geometry.VectorMath.Vector3D,Microsoft.MapPoint.Geometry.VectorMath.LookAtLookUp)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint"/> 
            class using global position and orientation.  If a position needs to
            be created with a local orientation, create using <see cref="P:Microsoft.MapPoint.Geometry.VectorMath.LookAtLookUp.Default"/>
            and then set appropriate values on <see cref="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.LocalOrientation"/>.
            </summary>
            <param name="position">The global position of the Viewpoint.</param>
            <param name="orientation">The global orientation of the Viewpoint.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.PositionChanging">
            <summary>
            Overrides <see cref="M:Microsoft.MapPoint.Geometry.VectorMath.Viewpoint.PositionChanging"/> to recalculate 
            various values.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.OrientationChanging">
            <summary>
            Overrides <see cref="M:Microsoft.MapPoint.Geometry.VectorMath.Viewpoint.OrientationChanging"/> to mark
            various values for recalculation.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.LocalOrientationChanging">
            <summary>
            Called when the local orientation has changed so that various 
            values can be marked for recalculation.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.SilentCopy(Microsoft.MapPoint.Geometry.VectorMath.Viewpoint)">
            <summary>
            Copies from a source orientation to this, raising no events.
            This should be used with care as classes that rely on the events
            will not update properly.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.NeedOrientation(Microsoft.MapPoint.Geometry.VectorMath.Orientation)">
            <summary>
            Overrides <see cref="M:Microsoft.MapPoint.Geometry.VectorMath.Viewpoint.NeedOrientation(Microsoft.MapPoint.Geometry.VectorMath.Orientation)"/> to calculate 
            the global orientation if necessary.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.NeedLocalOrientation">
            <summary>
            Calculates the local orientation if necessary.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.GetOrientationOfLocalCoordinateSystem(Microsoft.MapPoint.Geometry.VectorMath.Vector3D)">
            <summary>
            Gets the orientation of the local coordinate system associated with point <paramref name="position"/>.
            The orientation is expressed wrt (with respect to) the world coordinate system (WCS) and returned as a Matrix4x4D.
            In the local coordinate system the Z axis is the normal vector to the earth's surface at point <paramref name="position"/>.
            The Y axis points North and X axis is given by Y*Z
            </summary>
            <remarks>No error checking is performed to test if <paramref name="position"/> actually lies on the earth's surface</remarks>
            <param name="position">(X,Y,Z) coordinates of a point on the earth's surface</param>
            <returns>Orientation of the local coordinate system associated with point <paramref name="position"/>.
            The first row of the matrix gives the X axis of the local coordinate system expressed wrt WCS.
            The second row of the matrix gives the Y axis of the local coordinate system expressed wrt WCS.
            The third row of the matrix gives the Z axis of the local coordinate system expressed wrt WCS.</returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.CalculateLocalOrientation(Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition,Microsoft.MapPoint.Geometry.VectorMath.Orientation,Microsoft.MapPoint.Geometry.VectorMath.Orientation)">
            <summary>
            Calculates a geodetically local orientation from a geodetic position and a global orientation.
            </summary>
            <param name="position"></param>
            <param name="globalOrientation"></param>
            <param name="localOrientation"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.CalculateGlobalOrientation(Microsoft.MapPoint.Rendering3D.Cameras.GeodeticPosition,Microsoft.MapPoint.Geometry.VectorMath.Orientation,Microsoft.MapPoint.Geometry.VectorMath.Orientation)">
            <summary>
            Calculates a global orientation from a geodetic position and a geodetically local orientation.
            </summary>
            <param name="position"></param>
            <param name="localOrientation"></param>
            <param name="globalOrientation"></param>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.Position">
            <summary>
            Gets the position of the viewpoint.  Position cannot be replaced, but can be modified.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.Cameras.GeodeticViewpoint.LocalOrientation">
            <summary>
            Gets the local orientation of the viewpoint.  LocalOrientation cannot be replaced, but can be modified.
            </summary>
        </member>
        <member name="T:Microsoft.MapPoint.Rendering3D.LatLonAlt">
            <summary>
            Encapsulates a location structure consisting of a Latitude and 
            Longitude in radians or degrees, and an altitude in meters.
            </summary>
        </member>
        <member name="F:Microsoft.MapPoint.Rendering3D.LatLonAlt.Empty">
            <summary>
            An uninitialized <see cref="T:Microsoft.MapPoint.Rendering3D.LatLonAlt"/>.
            </summary>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.ReadAllBytesFromStream(System.IO.Stream)">
            <summary>
            Reads the entire contents of a stream into a byte array.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.CreateUsingDegrees(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLonAlt"/> 
            structure using degrees.
            </summary>
            <param name="latitude">Latitude expressed in degrees.</param>
            <param name="longitude">Longitude expressed in degrees.</param>
            <param name="altitude">Altitude from the WGS84 datum, in meters.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.CreateUsingRadians(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLonAlt"/> 
            structure using radians.
            </summary>
            <param name="latitude">Latitude expressed in radians.</param>
            <param name="longitude">Longitude expressed in radians.</param>
            <param name="altitude">Altitude from the WGS84 datum, in meters.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.#ctor(Microsoft.MapPoint.CoordinateSystems.Coordinate2D)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLonAlt"/> 
            structure.
            </summary>
            <param name="coordinate">A lat/long coordinate, where X = longitude (degrees) and Y = latitude (degrees).</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.#ctor(Microsoft.MapPoint.CoordinateSystems.Coordinate3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLonAlt"/> 
            structure.
            </summary>
            <param name="coordinate">A lat/long/alt coordinate, where X = longitude (degrees), Y = latitude (degrees), Z = meters above WGS84 datum.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.#ctor(Microsoft.MapPoint.Rendering3D.LatLon,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLonAlt"/> 
            structure.
            </summary>
            <param name="ll">The lat/long point to use.</param>
            <param name="altitude">Meters above WGS84 datum.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.#ctor(Microsoft.MapPoint.Geometry.VectorMath.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLonAlt"/> 
            structure using the WGS84 ellipsoid.
            </summary>
            <param name="vector"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.#ctor(Microsoft.MapPoint.CoordinateSystems.IDatum,Microsoft.MapPoint.Geometry.VectorMath.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLonAlt"/> 
            structure.
            </summary>
            <param name="datum"></param>
            <param name="vector"></param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MapPoint.Rendering3D.LatLonAlt"/> 
            structure.
            </summary>
            <param name="latitude">Latitude expressed in radians.</param>
            <param name="longitude">Longitude expressed in radians.</param>
            <param name="altitude">Altitude from the WGS84 datum, in meters.</param>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.GreatCircleDistance(Microsoft.MapPoint.Rendering3D.LatLonAlt,Microsoft.MapPoint.Rendering3D.LatLonAlt)">
            <summary>
            Calculates the great circle distance between two points.  Uses a spherical model
            for convenience, so will be slightly inaccurate for ellipsoidal datums.
            </summary>
            <param name="a">The first point.</param>
            <param name="b">The second point.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.GreatCircleDistance(Microsoft.MapPoint.Rendering3D.LatLonAlt)">
            <summary>
            Calculates the great circle distance between this point and another.  Uses a spherical model
            for convenience, so will be slightly inaccurate for ellipsoidal datums.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.Equals(Microsoft.MapPoint.Rendering3D.LatLonAlt)">
            <summary>
            Compares this struct to another of the same type.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.op_Equality(Microsoft.MapPoint.Rendering3D.LatLonAlt,Microsoft.MapPoint.Rendering3D.LatLonAlt)">
            <summary>
            Equality operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.op_Inequality(Microsoft.MapPoint.Rendering3D.LatLonAlt,Microsoft.MapPoint.Rendering3D.LatLonAlt)">
            <summary>
            Inequality operator.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.Equals(System.Object)">
            <summary>
            Overrides <see cref="M:System.Object.Equals(System.Object)"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.GetHashCode">
            <summary>
            Get a hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.ToString">
            <summary>
            ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.Height(System.Double,System.Double)">
            <summary>
            Get delta between Datum and mean sea level
            </summary>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.SeaLevel">
            <summary>
            Get mean sea level at the current location
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.GetCoordinate2D">
            <summary>
            Returns the position in latitude/longitude degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.GetCoordinate3D">
            <summary>
            Returns the position in latitude/longitude degrees, with Z = altitude from Datum in meters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.GetVector">
            <summary>
            Returns the position in global coordinates using the WGS84 ellipsoid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.GetVector(Microsoft.MapPoint.CoordinateSystems.IDatum)">
            <summary>
            Returns the position in global coordinates using the specified datum.
            </summary>
            <param name="datum">The datum to use.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.MapPoint.Rendering3D.LatLonAlt.GetVector(Microsoft.MapPoint.CoordinateSystems.IDatum,System.Double)">
            <summary>
            Returns the position in global coordinates using the specified datum.
            </summary>
            <param name="datum">The datum to use.</param>
            <param name="altitudeOffset">An offset to apply to the altitude before converting to global coordinates.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLonAlt.Latitude">
            <summary>
            Gets or sets the latitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLonAlt.Longitude">
            <summary>
            Gets or sets the longitude in radians.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLonAlt.LatitudeDegrees">
            <summary>
            Gets or sets the latitude in degrees.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLonAlt.LongitudeDegrees">
            <summary>
            Gets or sets the longitude in degrees.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLonAlt.LatLon">
            <summary>
            Gets or sets the latitude and longitude portion of the struct.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLonAlt.Altitude">
            <summary>
            Gets or sets the altitude in meters.
            </summary>
        </member>
        <member name="P:Microsoft.MapPoint.Rendering3D.LatLonAlt.AltitudeAboveSeaLevel">
            <summary>
            Gets altitude above sea level in meters.
            </summary>
        </member>
    </members>
</doc>
